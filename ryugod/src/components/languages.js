import * as monaco from 'monaco-editor'

export const languages =
{
    'Bash':{
      highlighting:"shell",
      ext: 'sh',
      kor: '리눅스 셸',
      template:"bash",
      icon:'mdi-bash',
      command:"chmod 755 {FILENAME}.{EXT} && bash {ARGS} ./{FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".*\\.sh: .+? (\\d+): (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_L)
    },
    'Python3':{
      highlighting:"python",
      ext: 'py',
      kor: '파이썬3',
      template:"python",
      icon:'mdi-language-python',
      command:"python3 {ARGS} {FILENAME}.{EXT}",
      cli: 'python3 {ARGS}',
      errorRegEx: ".+?\\.py\", line (\\d+)(?:.*?\r\n)+?(.*?Error: .*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_P)
    },
    'Python2.7':{
      highlighting:"python",
      ext: 'py',
      kor: '파이썬2',
      template:"python2",
      icon:'mdi-language-python',
      command:"python {ARGS} {FILENAME}.{EXT}",
      cli: 'python {ARGS}',
      errorRegEx: ".+?\\.py\", , line (\\d+)(?:.*?\r\n)+?(.*?Error: .*)",
      keyBindings: null
    },
    'Snek':{
      highlighting:"python",
      ext: 'py',
      kor: '스넥',
      template:"snek",
      icon:'mdi-language-python',
      command:"/opt/Snek/snek {ARGS} {FILENAME}.{EXT}",
      cli: '/opt/Snek/snek {ARGS}',
      errorRegEx: ".+\\.py:(\\d+) (.+)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_P)
    },
    'TypeScript':{
      highlighting:"typescript1",
      ext: 'ts',
      kor: '타입스크립트',
      template:"typescript",
      icon:'mdi-language-typescript',
      args: "--pretty false --target es2015",
      command:"tsc {ARGS} {FILENAME}.{EXT} && node {FILENAME}.js",
      cli: 'ts-node',
      errorRegEx: ".+?\\((\\d+),\\d+\\): (.+)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_T)
    },
    'TypeScript - Deno':{
      highlighting:"javascript1",
      ext: 'ts',
      kor: '데노',
      template:"deno",
      icon:'mdi-language-typescript',
      command:"deno {ARGS} -q run {FILENAME}.{EXT}",
      cli: 'deno repl {ARGS}',
      errorRegEx: ".+?: .+?:(\\d+):(\\d+)",
      keyBindings: null
    },
    'JS - Node.js':{
      highlighting:"javascript1",
      ext: 'js',
      kor: '노드.js (Javascript, 자바스크립트)',
      template:"javascript",
      icon:'mdi-nodejs',
      command:"node {ARGS} {FILENAME}.{EXT}",
      cli: 'node {ARGS}',
      errorRegEx: ".+:(\\d+)\r\n.+\r\n.+\r\n\r\n(.+)\r\n",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_J)
    },
    'JS - FireMonkey':{
      highlighting:"javascript1",
      ext: 'js',
      kor: '파이어몽키 (Javascript, 자바스크립트)',
      template:"firemonkey",
      icon:'mdi-language-javascript',
      command:"js68 {ARGS} {FILENAME}.{EXT}",
      cli: 'js68 {ARGS}',
      errorRegEx: ".+?\\.js:(\\d+):\\d+ (.+)",
      keyBindings: null
    },
    'JS - JerryScript':{
      highlighting:"javascript1",
      ext: 'js',
      kor: '제리스크립트 (Javascript, 자바스크립트)',
      template:"jerryscript",
      icon:'mdi-language-javascript',
      command:"jerry {ARGS} {FILENAME}.{EXT}",
      cli: 'jerry {ARGS}',
      errorRegEx: null,
      keyBindings: null
    },
    'JS - Rhino':{
      highlighting:"javascript1",
      ext: 'js',
      kor: '라이노 (Javascript, 자바스크립트)',
      template:"rhino",
      icon:'mdi-language-javascript',
      command:"rhino {ARGS} {FILENAME}.{EXT}",
      cli: 'rhino {ARGS}',
      errorRegEx: ".+?: .+?, line (\\d+): (.+)",
      keyBindings: null
    },
    'java':{
      highlighting:"java",
      ext: 'java',
      kor: '자바',
      template:"java",
      icon:'mdi-language-java',
      command:"javac {ARGS} {FILENAME}.{EXT} && java {FILENAME}",
      cli: 'jshell',
      defaultFilename: 'Main',
      errorRegEx: ".+?:(\\d+): (\\w+: .+)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V)
    },
    'HTML5':{
      highlighting:"html",
      ext: 'html',
      kor: 'HTML5',
      template:"html",
      icon:'mdi-language-html5',
      command:null,
      isCompiler:false,
      cli: null,
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_H)
    },
    'AngularJS':{
      highlighting:"html",
      ext: 'html',
      kor: '앵귤러JS',
      template:"angular",
      icon:'mdi-angularjs',
      command:null,
      isCompiler:false,
      cli: null,
      keyBindings: null
    },
    'JQuery':{
      highlighting:"html",
      ext: 'html',
      kor: '제이쿼리',
      template:"jquery",
      icon:'mdi-jquery',
      command:null,
      isCompiler:false,
      cli: null,
      keyBindings: null
    },
    'React.js':{
      highlighting:"html",
      ext: 'html',
      kor: '리액트',
      template:"react",
      icon:'mdi-react',
      command:null,
      isCompiler:false,
      cli: null,
      keyBindings: null
    },
    'Vue.js':{
      highlighting:"html",
      ext: 'html',
      kor: '뷰',
      template:"vue",
      icon:'mdi-vuejs',
      command:null,
      isCompiler:false,
      cli: null,
      keyBindings: null
    },
    'C':{
      highlighting:"c",
      ext: 'c',
      kor: 'C언어 - gcc',
      template:"c",
      icon:'mdi-language-c',
      args: '-Wall -lm',
      command:"gcc -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_C)
    },
    'C 89':{
      highlighting:"c",
      ext: 'c',
      kor: 'C언어(gcc) 89',
      template:"c89",
      icon:'mdi-language-c',
      args: '-Wall -lm -std=c89',
      command:"gcc -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C 11':{
      highlighting:"c",
      ext: 'c',
      kor: 'C언어 - gcc 11',
      template:"c11",
      icon:'mdi-language-c',
      args: '-Wall -lm -std=c11',
      command:"gcc -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C 17':{
      highlighting:"c",
      ext: 'c',
      kor: 'C언어 - gcc 17',
      template:"c17",
      icon:'mdi-language-c',
      args: '-Wall -lm -std=c17',
      command:"gcc -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C 18':{
      highlighting:"c",
      ext: 'c',
      kor: 'C언어 - gcc 17',
      template:"c18",
      icon:'mdi-language-c',
      args: '-Wall -lm -std=c18',
      command:"gcc -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C 2x':{
      highlighting:"c",
      ext: 'c',
      kor: 'C언어 - gcc 2x',
      template:"c2x",
      icon:'mdi-language-c',
      args: '-Wall -lm -std=c2x',
      command:"gcc -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'CLang':{
      highlighting:"c",
      ext: 'c',
      kor: 'C랭 - clang',
      template:"clang",
      icon:'mdi-language-c',
      args: '-Wall -lm',
      command:"clang -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'SubC':{
      highlighting:"c",
      ext: 'c',
      kor: '서브C - scc',
      template:"subc",
      icon:'mdi-language-c',
      command:"scc -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: "error: .+?: (\\d+): (.+)",
      keyBindings: null
    },
    'PortableC':{
      highlighting:"c",
      ext: 'c',
      kor: '포터블C - pcc',
      template:"pc",
      icon:'mdi-language-c',
      command:"pcc -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c, line (\\d+): (.+)",
      keyBindings: null
    },
    'TinyC':{
      highlighting:"c",
      ext: 'c',
      kor: '타이니C - tcc',
      template:"tinyc",
      args: '-Wall -lm',
      icon:'mdi-language-c',
      command:"tcc -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.c:(\\d+): error: (.+)",
      keyBindings: null
    },
    'CLang++':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C랭++ - clang++',
      template:"clang-cpp",
      icon:'mdi-language-cpp',
      args: '-Wall',
      command:"clang++ -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C++':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C++ - g++',
      template:"cc",
      icon:'mdi-language-cpp',
      args: '-Wall -lboost_system -lboost_thread -pthread -ltbb',
      command:"g++ -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C++ 98':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C++ - g++ 98',
      template:"cc98",
      icon:'mdi-language-cpp',
      args: '-Wall -std=c++98 -lboost_system -lboost_thread -pthread -ltbb',
      command:"g++ -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C++ 11':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C++ - g++ 11',
      template:"cc11",
      icon:'mdi-language-cpp',
      args: '-Wall -std=c++11 -lboost_system -lboost_thread -pthread -ltbb',
      command:"g++ -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C++ 14':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C++ - g++ 14',
      template:"cc14",
      icon:'mdi-language-cpp',
      args: '-Wall -std=c++14 -lboost_system -lboost_thread -pthread -ltbb',
      command:"g++ -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C++ 17':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C++ - g++ 17',
      template:"cc17",
      icon:'mdi-language-cpp',
      args: '-Wall -std=c++17 -lboost_system -lboost_thread -pthread -ltbb',
      command:"g++ -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C++ 2a':{
      highlighting:"cpp",
      ext: 'cc',
      kor: 'C++ - g++ 2a',
      template:"cc2a",
      icon:'mdi-language-cpp',
      args: '-Wall -std=c++2a -lboost_system -lboost_thread -pthread -ltbb',
      command:"g++ -fdiagnostics-color=never -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'C# - .NET Core':{
      highlighting:"csharp",
      ext: 'cs',
      kor: 'C Sharp - dotnet',
      template:"csharp",
      icon:'mdi-language-csharp',
      command:"([ -d {FILENAME}_Dotnet ] || dotnet new console -o {FILENAME}_Dotnet) && mv -f {FILENAME}.{EXT} {FILENAME}_Dotnet/Program.{EXT} && dotnet run {ARGS} --project {FILENAME}_Dotnet",
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?\\((\\d+),\\d+\\): error .+?: (.+)",
      keyBindings: null
    },
    'C# - Mono':{
      highlighting:"csharp",
      ext: 'cs',
      kor: 'C Sharp - msc',
      template:"csmono",
      icon:'mdi-language-csharp',
      command:"mcs {ARGS} {FILENAME}.{EXT} && mono ./{FILENAME}.exe",
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".*\\((\\d+),\\d+\\): (.*)",
      keyBindings: null
    },
    'Markdown':{
      highlighting:"markdown",
      ext: 'md',
      kor: '마크다운',
      template:"md",
      icon:'mdi-language-markdown',
      command:null,
      isCompiler:false,
      cli: null,
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M)
    },
    'PHP':{
      highlighting:"php",
      ext: 'php',
      kor: 'PHP',
      template:"php",
      icon:'mdi-language-php',
      args: '-q',
      command:'php-cgi {ARGS} {FILENAME}.{EXT} > {FILENAME}.html && imshow {FILENAME}.html',
      cli: null,
      errorRegEx: "PHP \\w+ error:  .*?(\\d+)(\r\n)",
      keyBindings: null
    },
    'VB.NET mono':{
      highlighting:"vb",
      ext: 'vb',
      kor: '비주얼베이식닷넷 - vbnc',
      template:"vbmono",
      icon:'mdi-dot-net',
      args: '-nologo',
      command:'vbnc {ARGS} {FILENAME}.{EXT} /out:{FILENAME}.exe && mono {FILENAME}.exe',
      cli: null,
      errorRegEx: ".+? \\((\\d+),(\\d+)\\) : (.+)",
      keyBindings: null
    },
    'VB.NET Core':{
      highlighting:"vb",
      ext: 'vb',
      kor: '비주얼베이식닷넷 - dotnet',
      template:"vbnet",
      icon:'mdi-dot-net',
      command:'([ -d {FILENAME}_Vb ] || dotnet new console -lang "vb" -o {FILENAME}_Vb) && mv -f {FILENAME}.{EXT} {FILENAME}_Vb/Program.{EXT} && dotnet run {ARGS} --project {FILENAME}_Vb',
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?\\((\\d+),\\d+\\): error .+?: (.+)",
      keyBindings: null
    },
    'VBScript':{
      highlighting:"vb",
      ext: 'vbs',
      kor: 'VB스크립트 - cscript',
      template:"vbscript",
      icon:'mdi-window-maximize',
      args: '//Nologo',
      command:'WINEDEBUG=-all wine cscript {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".*?\\((\\d+), \\d+\\) (.*)",
      keyBindings: null
    },
    'Windows Batch':{
      highlighting:"bat",
      ext: 'cmd',
      kor: 'Windows 배치 - cmd',
      template:"cmd",
      icon:'mdi-microsoft-windows',
      command:'wine cmd {ARGS} /c {FILENAME}.{EXT}',
      cli: "wine cmd {ARGS} /k c:",
      keyBindings: null
    },
    'ABC':{
      highlighting:"abc",
      ext: 'abc',
      kor: 'ABC',
      template:"abc",
      icon:'mdi-ab-testing',
      command:"abc {ARGS} < {FILENAME}.{EXT}",
      cli: "abc {ARGS}",
      keyBindings: null
    },
    'ABS':{
      highlighting:"abs",
      ext: 'abs',
      kor: 'ABS',
      template:"abs",
      icon:'mdi-car-brake-abs',
      command:"abs {ARGS} {FILENAME}.{EXT}",
      cli: "abs",
      errorRegEx: "Error: .+\\.ds Line: (\\d+)(.+)",
      keyBindings: null
    },
    'Ada':{
      highlighting:"ada",
      ext: 'adb',
      kor: '에이다 - gnatmake',
      template:"ada",
      icon:'mdi-alpha-a-circle-outline',
      command:'gnatmake {ARGS} -q {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+:(\\d+):\\d+: (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_A)
    },
    'Adept':{
      highlighting:"adept",
      ext: 'adept',
      kor: '어뎁트',
      template:"adept",
      icon:'mdi-inbox-multiple',
      args:'-std=2.4',
      command:'/opt/adept/adept {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.adept:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Agena':{
      highlighting:"agena",
      ext: 'agn',
      kor: '아제나',
      template:"agena",
      icon:'mdi-code-greater-than-or-equal',
      command:'AGENAPATH=/opt/agena/lib /opt/agena/bin/agena {ARGS} {FILENAME}.{EXT}',
      cli: 'export AGENAPATH=/opt/agena/lib\n/opt/agena/bin/agena {ARGS}',
      errorRegEx: ".+?: Error in .+?\\.agn at line (\\d+):\r\n(.*)",
      keyBindings: null
    },
    'AFNIX':{
      highlighting:"afnix",
      ext: 'als',
      kor: 'AFNIX - axi',
      template:"afnix",
      icon:'mdi-flare',
      command:'axi {ARGS} {FILENAME}.{EXT}',
      cli: 'axi {ARGS}',
      errorRegEx: ".+?\\.als .+? line (\\d+).*\r\n(.+)",
      keyBindings: null
    },
    'Agda':{
      highlighting:"agda",
      ext: 'agda',
      kor: '아그다',
      template:"agda",
      icon:'mdi-hard-hat',
      command:'agda -c {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: "agda -I {ARGS}",
      defaultFilename: 'ryugod',
      errorRegEx: ".+?\\.agda:(\\d+),(.+\r\n.+)",
      keyBindings: null
    },
    'Agora':{
      highlighting:"agora",
      ext: 'agora',
      kor: '아고라',
      template:"agora",
      icon:'mdi-fireplace-off',
      command:'/opt/agora/agora run {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+\\.agora:(\\d+):(.+)",
      keyBindings: null
    },
    'Aime':{
      highlighting:"aime",
      ext: 'aime',
      kor: 'Aime',
      template:"aime",
      icon:'mdi-coach-lamp',
      command:'aime {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?: .+?: (\\d+): (.+)",
      keyBindings: null
    },
    'Aku':{
      highlighting:"aku",
      ext: 'aku',
      kor: '아쿠',
      template:"aku",
      icon:'mdi-car-parking-lights',
      command:'akucc {ARGS} {FILENAME}.{EXT} && gcc -o {FILENAME} -I/opt/aku/include -L/opt/aku/lib out{FILENAME}.{EXT}.c -laku && ./{FILENAME}',
      cli: null,
      errorRegEx: "akucc: .+?:(\\d+): (.+)",
      keyBindings: null
    },
    'Alan':{
      highlighting:"alan",
      ext: 'ln',
      kor: '알란',
      template:"alan",
      icon:'mdi-google-cardboard',
      command:'alan compile {ARGS} {FILENAME}.{EXT} {FILENAME}.agc && alan run {FILENAME}.agc',
      cli: null,
      errorRegEx: ".+? line (\\d+):\\d+(.*)",
      keyBindings: null
    },
    'Aldor':{
      highlighting:"aldor",
      ext: 'as',
      kor: '알도르',
      template:"aldor",
      icon:'mdi-bowl-mix-outline',
      args: '-G interp',
      command:'/opt/aldor/bin/aldor {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+\\.as\", line (\\d+):(.+)",
      keyBindings: null
    },
    'Algae':{
      highlighting:"algae",
      ext: 'A',
      kor: '알지',
      template:"algae",
      icon:'mdi-source-branch',
      command:'/opt/algae/bin/algae {ARGS} {FILENAME}.{EXT}',
      cli: '/opt/algae/bin/algae',
      errorRegEx: "algae: .+?\\.A: line (\\d+): (.+)",
      keyBindings: null
    },
    'Algol60':{
      highlighting:"algol60",
      ext: 'alg',
      kor: '알골60 - jff-algol',
      template:"algol60",
      icon:'mdi-alpha',
      command:'/opt/algol60/bin/jff-algol {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?, line (\\d+) \\(file .+?\\.alg\\):(.+)",
      keyBindings: null
    },
    'Algol68':{
      highlighting:"algol",
      ext: 'alg',
      kor: '알골68',
      template:"algol",
      icon:'mdi-alpha',
      command:'a68g {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "(\\d+) +?.*\r\n.*?\r\na68g: .*?: \\d+: (.*)",
      keyBindings: null
    },
    'Algol W':{
      highlighting:"algol60",
      ext: 'alw',
      kor: '알골W',
      template:"algolw",
      icon:'mdi-alpha',
      args: '{FILENAME}.{EXT} -c {FILENAME}.c && gcc {FILENAME}.c -o {FILENAME} -I/opt/algolw/include -L/opt/algolw/lib -lawe -lgc -lm',
      command:'/opt/algolw/bin/awe {ARGS} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.alw:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Alice':{
      highlighting:"sml",
      ext: 'aml',
      kor: '앨리스',
      template:"alice",
      icon:'mdi-shoe-heel',
      command:'/opt/alice/bin/alicec {ARGS} {FILENAME}.{EXT} && /opt/alice/bin/alicerun {FILENAME}.alc',
      cli: null,
      errorRegEx: ".+?\\.aml:(\\d+)(.+)",
      keyBindings: null
    },
    'Alma':{
      highlighting:"alma",
      ext: 'alma',
      kor: '알마',
      template:"alma",
      icon:'mdi-skateboard',
      command:'export ALMA_PATH=/opt/alma/lib\nalma {ARGS} {FILENAME}.{EXT}',
      cli: 'export ALMA_PATH=/opt/alma/lib\nalma',
      errorRegEx: ".+? at line (\\d+)[:.](.*)",
      keyBindings: null
    },
    'Alore':{
      highlighting:"alore",
      ext: 'alo',
      kor: '알로어',
      template:"alore",
      icon:'mdi-triangle-outline',
      command:'/opt/alore/bin/alorec {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.alo, line (\\d+): (.+)",
      keyBindings: null
    },
    'Alta':{
      highlighting:"alta",
      ext: 'alta',
      kor: '알타',
      template:"alta",
      icon:'mdi-road-variant',
      args: '-c',
      command:'genalta {FILENAME} && altac {ARGS} && alta-build/_build/bin/{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.alta:(\\d+):\\d+(.*)",
      keyBindings: null
    },
    'Amber':{
      highlighting:"amber",
      ext: 'ab',
      kor: '앰버',
      template:"amber",
      icon:'mdi-road-variant',
      command:'amber {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?\\.alta:(\\d+):\\d+(.*)",
      keyBindings: null
    },
    'Amiga E':{
      highlighting:"amigae",
      ext: 'e',
      kor: '아미가 E',
      template:"amigae",
      icon:'mdi-alpha-e',
      command:'vamos /opt/amiga/EC {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "ERROR: .+\r\nLINE (\\d+):.+",
      keyBindings: null
    },
    'AngelScript':{
      highlighting:"angelscript",
      ext: 'as',
      kor: '엔젤스크립트',
      template:"angelscript",
      icon:'mdi-star-four-points-outline',
      command:'asrun {ARGS} {FILENAME}.{EXT}',
      cli: '/opt/angelscript/bin/console',
      errorRegEx: ".+?\\.as \\((\\d+), \\d+\\) : ERR  : (.+)",
      keyBindings: null
    },
    'Ape':{
      highlighting:"ape",
      ext: 'ape',
      kor: '에이프',
      template:"ape",
      icon:'mdi-pickaxe',
      args: null,
      command:'/opt/ape/bin/ape {FILENAME}.{EXT} {ARGS}',
      cli: '/opt/ape/bin/repl',
      errorRegEx: ".+\\.ape\" on (\\d+):\\d+: .+",
      keyBindings: null
    },
    'APL':{
      highlighting:"apl",
      ext: 'apl',
      kor: 'APL',
      template:"apl",
      icon:'mdi-smoking-pipe',
      args: '--OFF -s',
      command:'apl {ARGS} -f {FILENAME}.{EXT}',
      cli: 'apl',
      errorRegEx: null,
      keyBindings: null
    },
    'APlus':{
      highlighting:"aplus",
      ext: 'a+',
      kor: 'A플러스 - a+',
      template:"aplus",
      icon:'mdi-plus-box-outline',
      args: '-q',
      command:'iconv -f utf-8 -t iso-8859-1 {FILENAME}.{EXT} -o {FILENAME}.{EXT} 2> /dev/null\n/opt/aplus/bin/a+ {ARGS} {FILENAME}.{EXT}',
      cli: '/opt/aplus/bin/a+',
      errorRegEx: null,
      keyBindings: null
    },
    'Arc':{
      highlighting:"arc",
      ext: 'arc',
      kor: '아크 - arcadia',
      template:"arc",
      icon:'mdi-circle-multiple-outline',
      command:'arcadia {ARGS} {FILENAME}.{EXT}',
      cli: 'arcadia {ARGS}',
      errorRegEx: null,
      keyBindings: null
    },
    'Argile':{
      highlighting:"argile",
      ext: 'arg',
      kor: '아르질 - arc',
      template:"argile",
      icon:'mdi-car-convertible',
      command:'arc {ARGS} {FILENAME}.{EXT} > {FILENAME}.c && gcc -I/opt/argile/include -L/opt/argile/lib -o {FILENAME} {FILENAME}.c -l:libargrt.a && ./{FILENAME}',
      cli: null,
      errorRegEx: "arc: .+? error: .+?\r\n.*?\r\n.+? at .+? line (\\d+)(.*)",
      keyBindings: null
    },
    'Aribas':{
      highlighting:"pascal",
      ext: 'ari',
      kor: '아리바스',
      template:"aribas",
      icon:'mdi-guitar-pick-outline',
      args: '-q',
      command:'aribas {ARGS} -b {FILENAME}.{EXT}',
      cli: 'aribas {ARGS}',
      errorRegEx: "error in line <= (\\d+) (.*)",
      keyBindings: null
    },
    'ArkScript':{
      highlighting:"ark",
      ext: 'ark',
      kor: '아크스크립트',
      template:"ark",
      icon:'mdi-code-parentheses',
      command:'ark {ARGS} {FILENAME}.{EXT}',
      cli: 'ark {ARGS}',
      errorRegEx: "On line (\\d+):\\d+, (.+)",
      keyBindings: null
    },
    'ArnoldC':{
      highlighting:"arnoldc",
      ext: 'arnoldc',
      kor: '아놀드씨',
      template:"arnoldc",
      icon:'mdi-glasses',
      command:'arnoldc {ARGS} {FILENAME}.{EXT} && java {FILENAME}',
      cli: null,
      errorRegEx: ".+\\(line (\\d+), pos \\d+\\)(.*)",
      keyBindings: null
    },
    'Arrow':{
      highlighting:"arrow",
      ext: 'ar',
      kor: '애로우',
      template:"arrow",
      icon:'mdi-bullseye-arrow',
      command:'arrow {ARGS} {FILENAME}.{EXT}',
      cli: 'arrow {ARGS}',
      errorRegEx: "Error: .+?on line number (\\d+)(.*)",
      keyBindings: null
    },
    'Arturo':{
      highlighting:"arturo",
      ext: 'art',
      kor: '아르뚜로',
      template:"arturo",
      icon:'mdi-zodiac-capricorn',
      args:'--no-color',
      command:'arturo {ARGS} {FILENAME}.{EXT}',
      cli: 'arturo {ARGS}',
      errorRegEx: " +error \\| Line: (\\d+)\r\n( +\\| (.*)\r\n)+",
      keyBindings: null
    },
    'ASP.NET mono':{
      highlighting:"html",
      ext: 'aspx',
      kor: 'ASP닷넷 - xsp4',
      template:"aspnet",
      icon:'mdi-dot-net',
      args: '--nonstop --quiet',
      command:'ps -ef | grep xsp4 | grep -v grep > /dev/null || (xsp4 {ARGS} & > /dev/null)\ncurl -4 -s --retry-connrefused --retry 10 --retry-delay 1 http://localhost:9000/{FILENAME}.{EXT} > {FILENAME}.html && imshow {FILENAME}.html',
      cli: null,
      defaultFilename: 'index',
      errorRegEx: null,
      keyBindings: null
    },
    'AspectC++':{
      highlighting:"cpp",
      ext: 'cc',
      kor: '애스펙트C++ - ag++',
      template:"acpp",
      icon:'mdi-language-cpp',
      args: '-Wall',
      command:"ag++ -o {FILENAME} {FILENAME}.{EXT} {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'AspectJ':{
      highlighting:"java",
      ext: 'aj',
      kor: '애스펙트J',
      template:"aspectj",
      icon:'mdi-aspect-ratio',
      command:'ajc {ARGS} {FILENAME}.{EXT} && java {FILENAME}',
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?\\.aj:(\\d+) (.+)",
      keyBindings: null
    },
    'Assembly(MC68K)':{
      highlighting:"a68k",
      ext: 's',
      kor: '어셈블리 - a68k',
      template:"a68k",
      icon:'mdi-alpha-a-box-outline',
      command:'vamos /opt/amiga/a68k {ARGS} {FILENAME}.{EXT} && vamos /opt/amiga/blink {FILENAME}.o && vamos {FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.s line (\\d+)(.*)",
      keyBindings: null
    },
    'Assembly(x86)':{
      highlighting:"assembly",
      ext: 'asm',
      kor: '어셈블리 - nasm',
      template:"assembly",
      icon:'mdi-alpha-a-box-outline',
      args: '-f elf64',
      command:'nasm {ARGS} {FILENAME}.{EXT} && ld -s -o {FILENAME} {FILENAME}.o && ./{FILENAME}',
      cli: null,
      errorRegEx: ".*?:(\\d+): \\w+: (.*)",
      keyBindings: null
    },    
    'Asymptote':{
      highlighting:"asymptote",
      ext: 'asy',
      kor: '아심토트',
      template:"asymptote",
      icon:'mdi-chart-sankey',
      args: '-f svg',
      command:'/opt/asy/bin/asy {ARGS} {FILENAME}.{EXT} && ( [ -f {FILENAME}.svg ] && imshow {FILENAME}.svg && rm -f {FILENAME}.svg )',
      cli: '/opt/asy/bin/asy {ARGS}',
      errorRegEx: ".+?\\.asy: (\\d+)\\.\\d+: (.+)",
      keyBindings: null
    },
    'ATS':{
      highlighting:"ats",
      ext: 'dats',
      kor: 'ATS (Applied Type System)',
      template:"ats",
      icon:'mdi-alpha-a',
      command:'patscc {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.dats: \\d+\\(line=(\\d+), offs=\\d+\\) (.+)",
      keyBindings: null
    },
    'Avalon':{
      highlighting:"avalon",
      ext: 'avl',
      kor: '아발론',
      template:"avalon",
      icon:'mdi-island',
      command:'AVALON_HOME=/opt/avalon/sdk /opt/avalon/bin/avaloni {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?\\.avl:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Awk':{
      highlighting:"shell",
      ext: 'awk',
      kor: '오크',
      template:"awk",
      icon:'mdi-alpha-a-box',
      args: '-f {FILENAME}.{EXT}',
      command:'awk {ARGS}',
      cli: null,
      errorRegEx: "\\w+?: .+?: line (\\d+): (.+)",
      keyBindings: null
    },
    'AutoHotKey':{
      highlighting:"autohotkey",
      ext: 'ahk',
      kor: '오토핫키',
      template:"autohotkey",
      icon:'mdi-keyboard-outline',
      command:'([ -f /tmp/xvfb.pid ] || (/etc/init.d/xvfb start && sleep 2)) && DISPLAY=:0 WINEPATH=C:\\\\AutoHotKey wine Ahk2Exe.exe /in {FILENAME}.{EXT} /out {FILENAME}.exe {ARGS} && imshow ./{FILENAME}.exe',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'AutoIt':{
      highlighting:"autoit",
      ext: 'au3',
      kor: '오토잇',
      template:"autoit",
      icon:'mdi-alpha-a-circle',
      args: '/nopack',
      command:'WINEPATH=C:\\\\Autoit wine Au3Check.exe {FILENAME}.{EXT} && WINEPATH=C:\\\\Autoit\\\\Aut2Exe wine Aut2exe.exe /in {FILENAME}.{EXT} /out {FILENAME}.exe {ARGS} && imshow ./{FILENAME}.exe',
      cli: null,
      errorRegEx: ".*?\\((\\d+),\\d+\\) : (.*)",
      keyBindings: null
    },
    'B':{
      highlighting:"c",
      ext: 'b',
      kor: 'B언어 - ybc',
      template:'b',
      icon:'mdi-alpha-b',
      command:'rm -f {FILENAME} && ybc {ARGS} -o `pwd`/{FILENAME} `pwd`/{FILENAME}.{EXT} && [ -f {FILENAME} ] && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.b\\] at line (\\d+), (.+)",
      keyBindings: null
    },
    'Bacon':{
      highlighting:"vb",
      ext: 'bac',
      kor: '베이컨',
      template:'bacon',
      icon:'mdi-pig-variant',
      args:'-y -z',
      command:'bacon {ARGS} {FILENAME} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?: .+? line (\\d+) in file .+?\\.bac: (.+)",
      keyBindings: null
    },
    'Baik':{
      highlighting:"baik",
      ext: 'ina',
      kor: '바이크',
      template:'baik',
      icon:'mdi-map',
      command:'baik {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "Program Utama : .+? (\\d+)(.*)",
      keyBindings: null
    },
    'Ballerina':{
      highlighting:"ballerina",
      ext: 'bal',
      kor: '발레리나',
      template:'ballerina',
      icon:'mdi-human-handsup',
      args: 'build {FILENAME}.{EXT} && java -jar {FILENAME}.jar',
      command:'/opt/ballerina/bin/bal {ARGS}',
      cli: '/opt/ballerina/bin/bal shell',
      errorRegEx: ".+\\.bal:\\((\\d+):(.+)",
      keyBindings: null
    },
    'Bas':{
      highlighting:"vb",
      ext: 'bas',
      kor: '바스',
      template:'bas',
      icon:'mdi-alpha-b-box-outline',
      args: null,
      command:'/opt/bas/bin/bas {ARGS} {FILENAME}.{EXT}',
      cli: '/opt/bas/bin/bas {ARGS}',
      errorRegEx: "Error: .+? in line (\\d+) at:\r\n(.+)",
      keyBindings: null
    },
    'Basic':{
      highlighting:"vb",
      ext: 'bas',
      kor: '베이식 - FreeBASIC',
      template:'basic',
      icon:'mdi-alpha-b-box-outline',
      args: '-lang deprecated',
      command:'fbc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".*?\\((\\d+)\\) (.*)",
      keyBindings: null
    },   
    'Battlestar':{
      highlighting:"battlestar",
      ext: 'bts',
      kor: '배틀스타',
      template:'battlestar',
      icon:'mdi-airport',
      args: 'run',
      command:'bts {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'BC':{
      highlighting:"bc",
      ext: 'bc',
      kor: 'BC(계산기)',
      template:'bc',
      icon:'mdi-calculator',
      command:'bc {ARGS} < {FILENAME}.{EXT}',
      cli: "bc {ARGS}",
      errorRegEx: "\\(.+?\\) (\\d+): (.+)",
      keyBindings: null
    },
    'BCPL':{
      highlighting:"bcpl",
      ext: 'b',
      kor: 'BCPL',
      template:'bcpl',
      icon:'mdi-alpha-b-circle-outline',
      command:'source /opt/BCPL/setbcplenv && echo -e "c b64 {FILENAME}\n{FILENAME}\n" > {FILENAME}.in && cintsys64  {ARGS} < {FILENAME}.in',
      cli: "bcpl {ARGS}",
      errorRegEx: "Error .+?\\[(\\d+)\\]: (.+)",
      keyBindings: null
    },
    'Bean':{
      highlighting:"bean",
      ext: 'bn',
      kor: '빈',
      template:'bean',
      icon:'mdi-scatter-plot-outline',
      command:'/opt/bean/bean {ARGS} {FILENAME}.{EXT}',
      cli: "/opt/bean/bean",
      errorRegEx: ".+?\\.bn:(\\d+) (.+)",
      keyBindings: null
    },
    'BeanShell':{
      highlighting:"java",
      ext: 'bsh',
      kor: '빈셸',
      template:'beanshell',
      icon:'mdi-peanut-outline',
      command:'/opt/beanshell/bsh {ARGS} {FILENAME}.{EXT}',
      cli: "/opt/beanshell/bsh",
      errorRegEx: ".+?Error: .+? at [lL]ine:? (\\d+)[, ](.+)",
      keyBindings: null
    },
    'Befunge':{
      highlighting:"befunge",
      ext: 'bf',
      kor: '비펀지',
      template:'befunge',
      icon:'mdi-football-helmet',
      args: '-q',
      command:'bef {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Berry':{
      highlighting:"berry",
      ext: 'be',
      kor: '베리',
      template:'berry',
      icon:'mdi-egg-easter',
      command:'berry {ARGS} {FILENAME}.{EXT}',
      cli: 'berry',
      errorRegEx: ".+?\\.be:(\\d+): (.+)",
      keyBindings: null
    },
    'Bhuna':{
      highlighting:"bhuna",
      ext: 'bhu',
      kor: '부나',
      template:'bhuna',
      icon:'mdi-pot-steam-outline',
      command:'bhuna {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+ \\(line (\\d+), (column \\d+.*)",
      keyBindings: null
    },
    'Blossom':{
      highlighting:"blossom",
      ext: 'bls',
      kor: '블라섬',
      template:'blossom',
      icon:'mdi-flower-tulip-outline',
      command:'blossom {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?\\.bls:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Blue':{
      highlighting:"blue",
      ext: 'bl',
      kor: '블루',
      template:'blue',
      icon:'mdi-blur',
      command:'blue {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?\r\n(?:.+?\\.bl +?)?line: ?(\\d+)(.*)",
      keyBindings: null
    },
    'Bob':{
      highlighting:"bob",
      ext: 'bob',
      kor: '밥',
      template:'bob',
      icon:'mdi-flask-round-bottom-empty-outline',
      command:'bob {ARGS} {FILENAME}.{EXT}',
      cli: 'bob',
      errorRegEx: null,
      keyBindings: null
    },
    'Bone Lisp':{
      highlighting:"lisp",
      ext: 'bn',
      kor: '본리스프',
      template:'bonelisp',
      icon:'mdi-skull-crossbones-outline',
      command:'cd /opt/bone\n/opt/bone/bone {ARGS} ${OLDPWD}/{FILENAME}.{EXT} ; cd - > /dev/null',
      cli: 'cd /opt/bone\n/opt/bone/bone ; cd - > /dev/null',
      errorRegEx: ".+?\\.bn\":(\\d+)(.*)",
      keyBindings: null
    },
    'Boo':{
      highlighting:"python",
      ext: 'boo',
      kor: '부',
      template:'boo',
      icon:'mdi-dot-net',
      command:'booi {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+\\((\\d+),\\d+\\): (.+)",
      keyBindings: null
    },    
    'Borland C++':{
      highlighting:"cpp",
      ext: 'cpp',
      kor: '볼랜드 C++',
      template:"bcpp",
      icon:'mdi-microsoft-windows-classic',
      args: '-lq  -IC:\\\\bcc55\\\\Include -LC:\\\\bcc55\\\\Lib',
      command:'WINEPATH=C:\\\\bcc55\\\\Bin wine bcc32 {ARGS} {FILENAME}.{EXT} && wine ./{FILENAME}.exe',
      cli: null,
      errorRegEx: ".*? (\\d+): (.*)",
      keyBindings: null
    },
    'Borealis':{
      highlighting:"borealis",
      ext: 'bor',
      kor: '보어앨리스',
      template:"borealis",
      icon:'mdi-octagon-outline',
      args: '-f {FILENAME}.{EXT}',
      command:'borealis {ARGS}',
      cli: null,
      errorRegEx: ".+?: .+\r\nLine: (\\d+)(.*)",
      keyBindings: null
    },
    'Boron':{
      highlighting:"boron",
      ext: 'b',
      kor: '보론',
      template:"boron",
      icon:'mdi-octagon-outline',
      command:'boron {ARGS} {FILENAME}.{EXT}',
      cli: 'boron',
      errorRegEx: ".+?: .+? \\(line (\\d+)\\)",
      keyBindings: null
    },
    'Boson':{
      highlighting:"boson",
      ext: 'bs',
      kor: '보손',
      template:"boson",
      icon:'mdi-atom-variant',
      command:'/opt/boson/boson {FILENAME}.{EXT} && gcc -o {FILENAME} {FILENAME}.o /opt/boson/startupscript.o && ./{FILENAME}',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'BrainFuck':{
      highlighting:"bf",
      ext: 'bf',
      kor: '브레인퍽',
      template:"bf",
      icon:'mdi-brain',
      command:'bf {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Brat':{
      highlighting:"brat",
      ext: 'brat',
      kor: '브랫',
      template:"brat",
      icon:'mdi-human-child',
      command:'brat {ARGS} {FILENAME}.{EXT}',
      cli: "brat {ARGS}",
      errorRegEx: ".+? on line (\\d+)(:)",
      keyBindings: null
    },
    'Buzz':{
      highlighting:"buzz",
      ext: 'bzz',
      kor: '버즈',
      template:"buzz",
      icon:'mdi-bee',
      command:'bzzc {ARGS} {FILENAME}.{EXT} && bzzrun {FILENAME}.bo {FILENAME}.bdb',
      cli: null,
      errorRegEx: ".+?\\.bzz:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Bywater BASIC':{
      highlighting:"vb",
      ext: 'bas',
      kor: '바이워터 베이식',
      template:'bwbasic',
      icon:'mdi-cup-water',
      command:'bwbasic {ARGS} {FILENAME}.{EXT}',
      cli: 'bwbasic {ARGS}',
      errorRegEx: "Program Utama : .+? (\\d+)(.*)",
      keyBindings: null
    },    
    'C2':{
      highlighting:"c2",
      ext: 'c2',
      kor: 'C2',
      template:'c2',
      icon:'mdi-numeric-2-circle-outline',
      command:'/opt/c2/bin/gen_recipe {FILENAME} && C2_LIBDIR=/opt/c2/lib /opt/c2/bin/c2c {ARGS} && output/{FILENAME}/{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.c2:(\\d+):\\d+: error: (.+)",
      keyBindings: null
    },
    'C3':{
      highlighting:"c3",
      ext: 'c3',
      kor: 'C3',
      template:'c3',
      icon:'mdi-numeric-3-circle-outline',
      args: 'compile',
      command:'/opt/c3/bin/c3c {ARGS} {FILENAME}.{EXT} > /dev/null && ./a.out',
      cli: null,
      errorRegEx: "\\(.+?\\.c3:(\\d+)\\) Error: (.+)",
      keyBindings: null
    },
    'Caboose':{
      highlighting:"caboose",
      ext: 'cb',
      kor: '카부스',
      template:'caboose',
      icon:'mdi-bag-carry-on',
      command:'cb {ARGS} {FILENAME}.{EXT}',
      cli: 'cb {ARGS}',
      errorRegEx: "\\[line (\\d+)\\] Error(.+)",
      keyBindings: null
    },
    'CAML':{
      highlighting:"ocaml",
      ext: 'ml',
      kor: 'CAML - camllight',
      template:"caml",
      icon:'mdi-image-size-select-actual',
      command:"camlc {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: "camllight",
      errorRegEx: "(\\d+) \\| (.+?\r\n.+\r\n.+: .*)",
      keyBindings: null
    },
    'Carp':{
      highlighting:"carp",
      ext: 'carp',
      kor: ' 카프',
      template:"carp",
      icon:'mdi-fishbowl-outline',
      command:'CARP_DIR=/opt/carp /opt/carp/bin/carp {ARGS} -x {FILENAME}.{EXT}',
      cli: "CARP_DIR=/opt/carp /opt/carp/bin/carp {ARGS}",
      errorRegEx: ".+? at .+?\\.carp:(\\d+):(\\d+.*)",
      keyBindings: null
    },    
    'Castile':{
      highlighting:"castile",
      ext: 'castile',
      kor: ' 카스티야',
      template:"castile",
      icon:'mdi-map-legend',
      command:'castile {ARGS} {FILENAME}.{EXT}',
      errorRegEx: null,
      keyBindings: null
    }, 
    'Ceylon':{
      highlighting:"ceylon",
      ext: 'ceylon',
      kor: '실론',
      template:'ceylon',
      icon:'mdi-elephant',
      args: "run --compile=force --run={FILENAME} default",
      command:'mkdir -p source && mv -f {FILENAME}.{EXT} source && ceylon {ARGS}',
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?:(\\d+): (.+)",
      keyBindings: null
    },    
    'ChaiScript':{
      highlighting:"chaiscript",
      ext: 'chai',
      kor: '카이스크립트',
      template:"chaiscript",
      icon:'mdi-snowflake',
      command:'chai {ARGS} {FILENAME}.{EXT}',
      cli: "chai {ARGS}",
      errorRegEx: "Error: .+? \\(.*?(\\d+), \\d+\\)(.*)",
      keyBindings: null
    },
    'Chaos':{
      highlighting:"chaos",
      ext: 'kaos',
      kor: '카오스',
      template:"chaos",
      icon:'mdi-rotate-3d-variant',
      command:'chaos {ARGS} {FILENAME}.{EXT}',
      cli: "chaos",
      errorRegEx: null,
      keyBindings: null
    },
    'Chapel':{
      highlighting:"chapel",
      ext: 'chpl',
      kor: '채플',
      template:"chapel",
      icon:'mdi-church',
      args: '--baseline',
      command:'/opt/chapel/bin/chpl {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+\\.chpl:(\\d+): (.+)",
      keyBindings: null
    },
    'Chipmunk Basic':{
      highlighting:"vb",
      ext: 'bas',
      kor: '칩멍크 베이식',
      template:'cbasic',
      icon:'mdi-foot-print',
      command:'basic {ARGS} {FILENAME}.{EXT}',
      cli: "basic {ARGS}",
      errorRegEx: ".+ line (\\d+)(.*)",
      keyBindings: null
    },
    'Cheddar':{
      highlighting:"cheddar",
      ext: 'cdr',
      kor: '체다',
      template:'cheddar',
      icon:'mdi-cheese',
      command:'cheddar {ARGS} {FILENAME}.{EXT}',
      cli: "cheddar",
      errorRegEx: ".+? at (\\d+):(\\d+)",
      keyBindings: null
    },
    'Chuck':{
      highlighting:"chuck",
      ext: 'ck',
      kor: '척',
      template:"chuck",
      icon:'mdi-music-note',
      args: '--silent',
      command:'/opt/chuck/chuck {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "\\[.+?\\.ck\\]:line\\((\\d+)\\)(.+)",
      keyBindings: null
    },
    'Ciao':{
      highlighting:"ciao",
      ext: 'pl',
      kor: '차오',
      template:"ciao",
      icon:'mdi-human-greeting',
      args: '-o {FILENAME}',
      command:'ciaoc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: "ciao",
      errorRegEx: "ERROR: \\(lns \\d+-(\\d+)\\)(.+\r\n.+\r\n.+)",
      keyBindings: null
    },
    'CIL':{
      highlighting:"cil",
      ext: 'il',
      kor: '공통중간언어 - ilasm',
      template:"cil",
      icon:'mdi-dot-net',
      command:"ilasm {FILENAME}.{EXT} -out:{FILENAME}.exe && mono {FILENAME}.exe",
      cli: null,
      errorRegEx: ".+?\\((\\d+), \\d+\\) : (.+)",
      keyBindings: null
    },
    'Circle':{
      highlighting:"cpp",
      ext: 'cxx',
      kor: '서클',
      template:"circle",
      icon:'mdi-circle-double',
      command:"circle {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+\\.cxx:(\\d+):(\\d+).*\r\n.+",
      keyBindings: null
    },
    'Citrine':{
      highlighting:"citrine",
      ext: 'ctr',
      kor: '시트린',
      template:"citrine",
      icon:'mdi-diamond-stone',
      args: "",
      command:"/opt/citrine/bin/ctren {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? \\( ?.+\\.ctr: (\\d+) ?\\)(.*)",
      keyBindings: null
    },
    'Citron':{
      highlighting:"citron",
      ext: 'ctr',
      kor: '시트론',
      template:"citron",
      icon:'mdi-storefront-outline',
      args: "",
      command:"/opt/citron/bin/ctr {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? \\(.+\\.ctr: (\\d+)\\)(.*)",
      keyBindings: null
    },
    'Clean':{
      highlighting:"clean",
      ext: 'icl',
      kor: '클린',
      template:"clean",
      icon:'mdi-silverware-clean',
      args: '-nw -ms',
      command:'ln -sfT /opt/clean clean\nclean/bin/clm {ARGS} {FILENAME} -o {FILENAME} && ./{FILENAME}',
      cli: null,
      errorRegEx: "(?:Parse )?[Ee]rror \\[.+?\\.icl,(\\d+).*?\\]: (.+)",
      keyBindings: null
    },
    'Clipper(harbour)':{
      highlighting:"clipper",
      ext: 'prg',
      kor: '클리퍼 - 하버',
      template:"clipper",
      icon:'mdi-flag-triangle',
      args: '-q0',
      command:'harbour {ARGS} {FILENAME}.{EXT} && gcc -I/usr/local/include/harbour -o {FILENAME} {FILENAME}.c -lharbour && ./{FILENAME}',
      cli: null,
      defaultFilename: 'program',
      errorRegEx: ".+?\\.prg\\((\\d+)\\) Error (.+)",
      keyBindings: null
    },
    'CLIPS':{
      highlighting:"clips",
      ext: 'clp',
      kor: '클립스',
      template:"clips",
      icon:'mdi-pencil-ruler',
      args: '-f2',
      command:'/opt/clips/clips {ARGS} {FILENAME}.{EXT}',
      cli: '/opt/clips/clips',
      errorRegEx: null,
      keyBindings: null
    },
    'Clojure':{
      highlighting:"clojure",
      ext: 'clj',
      kor: '클로저',
      template:"clojure",
      icon:'mdi-chart-donut-variant',
      command:'clojure {ARGS} {FILENAME}.{EXT}',
      cli: "clojure {ARGS}",
      errorRegEx: ".*?\\(.*?:(\\d+)\\:(\\d+)\\).",
      keyBindings: null
    },
    'Clover':{
      highlighting:"clover",
      ext: 'cl',
      kor: '클로버',
      template:"clover",
      icon:'mdi-clover',
      command:'/opt/clover/bin/cclover {ARGS} {FILENAME}.{EXT} && /opt/clover/bin/clover {ARGS} {FILENAME}.{EXT}',
      cli: "/opt/clover/bin/iclover",
      errorRegEx: ".+?\\.cl (\\d+): (.+)",
      keyBindings: null
    },
    'Cobol':{
      highlighting:"cobol",
      ext: 'cob',
      kor: '코볼',
      template:"cobol",
      icon:'mdi-alpha-c-circle-outline',
      command:'cobc {ARGS} -x {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".*?: (\\d+): (.*)",
      keyBindings: null
    },
    'CobolScript':{
      highlighting:"cobol",
      ext: 'cob',
      kor: '코볼스크립트',
      template:"cobolscript",
      icon:'mdi-alpha-c-box-outline',
      command:'node /opt/cobolscript/run {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".*?: (\\d+): (.*)",
      keyBindings: null
    },
    'Cobra':{
      highlighting:"cobra",
      ext: 'cobra',
      kor: '코브라',
      template:"cobra",
      icon:'mdi-snake',
      args: '-run',
      command:'export MONO_PATH=/opt/cobra && cobra {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?\\((\\d+)(?:,\\d+)?\\): error: (.+)",
      keyBindings: null
    },
    'Coco':{
      highlighting:"coffeescript",
      ext: 'co',
      kor: '코코',
      template:"coco",
      icon:'mdi-coffee-maker',
      command:'coco {ARGS} {FILENAME}.{EXT}',
      cli: "coco {ARGS}",
      errorRegEx: ".*?:(\\d+):\\d+: (.*)",
      keyBindings: null
    },
    'Coconut':{
     highlighting:"coconut",
      ext: 'coco',
      kor: '코코넛',
      template:"coconut",
      icon:'mdi-seed',
      command:"coconut {ARGS} {FILENAME}.{EXT} && python3 {FILENAME}.py",
      cli: 'coconut {ARGS}',
      errorRegEx: ".+?: .+? \\(line (\\d+)\\)(.*)",
      keyBindings: null
    },
    'CoffeeScript':{
      highlighting:"coffeescript",
      ext: 'coffee',
      kor: '커피스크립트',
      template:"coffee",
      icon:'mdi-coffee-outline',
      command:'coffee {ARGS} {FILENAME}.{EXT}',
      cli: "coffee {ARGS}",
      errorRegEx: ".*?:(\\d+):\\d+: (.*)",
      keyBindings: null
    },
    'Colm':{
      highlighting:"colm",
      ext: 'lm',
      kor: 'Colm',
      template:"colm",
      icon:'mdi-cupboard',
      command:'/opt/colm/bin/colm {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.lm:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Comal':{
      highlighting:"comal",
      ext: 'lst',
      kor: '코멀 - opencomal',
      template:"comal",
      icon:'mdi-egg',
      command:'echo -e "save \\"{FILENAME}.cml\\"\nbye" >> {FILENAME}.{EXT} && /opt/opencomal/bin/opencomal {ARGS} < {FILENAME}.{EXT} | head -n -1 && /opt/opencomal/bin/opencomalrun {FILENAME}.cml | head -n -1',
      cli: "/opt/opencomal/bin/opencomal {ARGS}",
      errorRegEx: ".*?:(\\d+):\\d+: (.*)",
      keyBindings: null
    },
    'Commodore BASIC':{
      highlighting:"vb",
      ext: 'bas',
      kor: '코모도어베이식 - cbmbasic',
      template:"cbmbasic",
      icon:'mdi-keyboard',
      command:'/opt/cbmbasic/cbmbasic {ARGS} {FILENAME}.{EXT}',
      cli: "/opt/cbmbasic/cbmbasic",
      errorRegEx: null,
      keyBindings: null
    },
    'CommonLisp':{
      highlighting:"lisp",
      ext: 'lisp',
      kor: '커먼리스프',
      template:"lisp",
      icon:'mdi-code-parentheses',
      command:"clisp {ARGS} {FILENAME}.{EXT}",
      cli: "clisp {ARGS}",
      keyBindings: null
    },
    'Cone':{
      highlighting:"cone",
      ext: 'cone',
      kor: '콘',
      template:"cone",
      icon:'mdi-traffic-cone',
      command:'conec {ARGS} {FILENAME}.{EXT} && gcc -static -o {FILENAME} {FILENAME}.o /opt/local/lib/libconestd.a && ./{FILENAME}',
      cli: null,
      errorRegEx: "Error .+\r\n.+\r\n.+?\\.cone:(\\d+):(\\d+)",
      keyBindings: null
    },
    'Conure':{
      highlighting:"conure",
      ext: 'cn',
      kor: '코뉴어',
      template:"conure",
      icon:'mdi-linux',
      command:'conure {ARGS} {FILENAME}.{EXT}',
      cli: 'conure',
      errorRegEx: null,
      keyBindings: null
    },
    'Cor':{
      highlighting:"cor",
      ext: 'cor',
      kor: '코르',
      template:"cor",
      icon:'mdi-alpha-c',
      args: 'run',
      command:'cor {ARGS} {FILENAME}.{EXT}',
      cli: 'cor',
      errorRegEx: null,
      keyBindings: null
    },
    'CoreScript':{
      highlighting:"javascript1",
      ext: 'cor',
      kor: '코어스크립트',
      template:"corescript",
      icon:'mdi-wall',
      command:"/opt/corescript/corescript {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/corescript/corescript {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'CppScript':{
      highlighting:"cppscript",
      ext: 'cpp',
      kor: 'Cpp스크립트',
      template:"cppscript",
      icon:'mdi-layers-triple-outline',
      command:"cpps {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? line: ?(\\d+)(.*)",
      keyBindings: null
    },
    'Crystal':{
      highlighting:"crystal",
      ext: 'cr',
      kor: '크리스탈',
      template:"crystal",
      icon:'mdi-crystal-ball',
      command:'crystal {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".*?:(\\d+):\\d+.*?\r\n\r\n.+\\d+ .+?\r\n.+?\r\n(.*)",
      keyBindings: null
    },
    'CUPL/CORC':{
      highlighting:"cupl",
      ext: 'cupl',
      kor: 'CUPL/CORC',
      template:"cupl",
      icon:'mdi-key-outline',
      args: "{FILENAME}.{EXT}",
      command:'/opt/cupl/cupl {ARGS}',
      errorRegEx: ".+?: line (\\d+), (.*)",
      keyBindings: null
    },
    'Curry(PAKCS)':{
      highlighting:"curry",
      ext: 'curry',
      kor: '커리- PACKS',
      template:"curry",
      icon:'mdi-lambda',
      command:'curry {ARGS} :compile {FILENAME} :eval {FILENAME} :quit',
      cli: 'curry {ARGS}',
      errorRegEx: ".+\\.curry:(\\d+):\\d+(.+)",
      keyBindings: null
    },
    'Curry(Sloth)':{
      highlighting:"curry",
      ext: 'curry',
      kor: '커리 - 슬로스',
      template:"sloth",
      icon:'mdi-bacteria-outline',
      command:"sloth {ARGS} {FILENAME}.{EXT} && ciaoc {FILENAME} && ./{FILENAME}",
      cli: "sloth -i {ARGS}",
      defaultFilename: 'Main',
      errorRegEx: "Parser error in: line\\((\\d+)\\)(.+\r\n.+\r\n.+)",
      keyBindings: null
    },    
    'D(Digital Mars)':{
      highlighting:"d",
      ext: 'd',
      kor: 'D언어 - dmd',
      template:"dmd",
      icon:'mdi-alpha-d',
      args: '-defaultlib=libphobos2.so -color=off',
      command:"/opt/dmd/linux/bin64/dmd {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.d\\((\\d+)\\): (.+)",
      keyBindings: null
    },
    'D(GNU)':{
      highlighting:"d",
      ext: 'd',
      kor: 'D언어 - gdc',
      template:"d",
      icon:'mdi-alpha-d',
      args: '-fdiagnostics-color=never -Wall',
      command:"gdc {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.d:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'D(LLVM)':{
      highlighting:"d",
      ext: 'd',
      kor: 'D언어 - ldc2',
      template:"ldc2",
      icon:'mdi-alpha-d',
      args: '--enable-color=false',
      command:"ldc2 {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.d\\((\\d+)\\): (Error: .+)",
      keyBindings: null
    },
    'Dafny':{
      highlighting:"dafny",
      ext: 'dfy',
      kor: '다프니',
      template:"dafny",
      icon:'mdi-microsoft',
      args: "/nologo",
      command:"dafny {ARGS} {FILENAME}.{EXT} && mono ./{FILENAME}.exe",
      cli: null,
      errorRegEx: ".+?\\((\\d+),\\d+\\): Error: (.+)",
      keyBindings: null
    },
    'Dart':{
      highlighting:"dart",
      ext: 'dart',
      kor: '다트',
      template:"dart",
      icon:'mdi-arrow-top-left-thick',
      command:'dart {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?:(\\d+):\\d+: (.*)",
      keyBindings: null
    },
    'Dao':{
      highlighting:"dao",
      ext: 'dao',
      kor: '다오',
      template:"dao",
      icon:'mdi-knife',
      command:"/opt/dao/bin/dao {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "  At line (\\d+) : (.+)",
      keyBindings: null
    },
    'daScript':{
      highlighting:"dascript",
      ext: 'das',
      kor: '다스크립트',
      template:"dascript",
      icon:'mdi-view-dashboard-outline',
      command:"daScript {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\d+:(\\d+) - \\d+:\\d+\r\n(.+)",
      keyBindings: null
    },    
    'Dictu':{
      highlighting:"dictu",
      ext: 'du',
      kor: '딕투',
      template:"dictu",
      icon:'mdi-bottle-tonic-outline',
      command:"/opt/dictu/bin/dictu {ARGS} {FILENAME}.{EXT}",
      cli: '/opt/dictu/bin/dictu {ARGS}',
      errorRegEx: ".+\\.du',.*?line (\\d+).*\r\n(.+)",
      keyBindings: null
    },
    'Dino':{
      highlighting:"dino",
      ext: 'd',
      kor: '다이노',
      template:"dino",
      icon:'mdi-google-downasaur',
      command:"/opt/dino/bin/dino {ARGS} {FILENAME}.{EXT}",
      cli: '/opt/dino/bin/dino {ARGS}',
      errorRegEx: ".+?.d:(\\d+):(.+)",
      keyBindings: null
    },
    'DogeScript':{
      highlighting:"dogescript",
      ext: 'djs',
      kor: '도지스크립트',
      template:"dogescript",
      icon:'mdi-dog-side',
      command:"dogescript {ARGS} {FILENAME}.{EXT} | node",
      cli: "dogescript {ARGS}",
      errorRegEx: ".+:(\\d+)\r\n.+\r\n.+\r\n\r\n(.+)\r\n",
      keyBindings: null
    },
    'Dragon':{
      highlighting:"dragon",
      ext: 'drg',
      kor: '드래곤',
      template:"dragon",
      icon:'mdi-alpha-d-circle',
      command:"dragon {ARGS} {FILENAME}.{EXT}",
      cli: "dragon {ARGS}",
      errorRegEx: "\\[.+?\\.drg\\] \\[Line: (\\d+)\\] (.+)",
      keyBindings: null
    },
    'Duck':{
      highlighting:"duck",
      ext: 'duck',
      kor: '덕',
      template:"duck",
      icon:'mdi-duck',
      command:"/opt/duck/bin/duck {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/duck/bin/duck {ARGS}",
      errorRegEx: ".+?on line (\\d+)(.+)",
      keyBindings: null
    },
    'DuckScript':{
      highlighting:"duckscript",
      ext: 'ds',
      kor: '덕스크립트',
      template:"duckscript",
      icon:'mdi-duck',
      command:"duck {ARGS} {FILENAME}.{EXT}",
      cli: "duck",
      errorRegEx: "Error: .+\\.ds Line: (\\d+)(.+)",
      keyBindings: null
    },
    'Dylan':{
      highlighting:"dylan",
      ext: 'dylan',
      kor: '딜런',
      template:"dylan",
      icon:'mdi-chart-tree',
      command:"([ -d {FILENAME} ] || make-dylan-app {FILENAME}) && mv -f {FILENAME}.{EXT} {FILENAME} && dylan-compiler {ARGS} -build {FILENAME}/{FILENAME}.lid && echo && _build/bin/{FILENAME}",
      cli: "dylan-compiler {ARGS}",
      defaultFilename: 'ryugod',
      errorRegEx: ".+:(\\d+)\\.\\d+-\\d+: (.*)",
      keyBindings: null
    },
    'E':{
      highlighting:"e",
      ext: 'e',
      kor: 'E언어',
      template:"e",
      icon:'mdi-alpha-e-box',
      command:'rune {ARGS} {FILENAME}.{EXT}',
      cli: "rune {ARGS}",
      errorRegEx: "# +@ <.+?\\w+::(\\d+):(\\d+)::\\d+:\\d+>",
      keyBindings: null
    },
    'EasyLang':{
      highlighting:"easylang",
      ext: 'ea',
      kor: '이지랭',
      template:"easylang",
      icon:'mdi-emoticon-cool-outline',
      command:'EasyLang {ARGS} {FILENAME}.{EXT}',
      cli: "EasyLang {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'eC':{
      highlighting:"ec",
      ext: 'ec',
      kor: 'eC',
      template:"ec",
      icon:'mdi-printer-3d',
      command:'mk_epj {FILENAME}\nepj2make {FILENAME}.epj && make -f {FILENAME}-Release.Makefile > /dev/null && obj/release.linux/{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\.ec:(\\d+):\\d+: error: (.+)",
      keyBindings: null
    },
    'EGA':{
      highlighting:"ega",
      ext: 'ega',
      kor: 'EGA',
      template:"ega",
      icon:'mdi-script',
      command:'ega {ARGS} {FILENAME}.{EXT}',
      cli: "ega",
      errorRegEx: ".+? at Line (\\d+)(.*)",
      keyBindings: null
    },
    'Egison':{
      highlighting:"egison",
      ext: 'egi',
      kor: '에기손',
      template:"egison",
      icon:'mdi-gamepad-circle',
      command:'egison {ARGS} {FILENAME}.{EXT}',
      cli: "egison {ARGS}",
      errorRegEx: "./*?: egison:(\\d+):(\\d+):\r\n(.+\r\n)+",
      keyBindings: null
    },
    'Elan':{
      highlighting:"elan",
      ext: 'e',
      kor: '엘란',
      template:"elan",
      icon:'mdi-lead-pencil',
      args: '-c {FILENAME}.{EXT} && gcc -static {FILENAME}.o -L/opt/elan/lib -lerts -o {FILENAME} && ./{FILENAME}',
      command:'/opt/elan/bin/elancc {ARGS}',
      cli: null,
      errorRegEx: ".+? in file .+?\\.e, line (\\d+), (.+)",
      keyBindings: null
    },
    'elastiC':{
      highlighting:"elastic",
      ext: 'ec',
      kor: '엘라스틱',
      template:"elastic",
      icon:'mdi-boxing-glove',
      command:'/opt/elastic/bin/ec {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "ERROR: \\(LINE: (\\d+), COLUMN: \\d+\\): (.+)",
      keyBindings: null
    },
    'ELENA':{
      highlighting:"elena",
      ext: 'l',
      kor: '엘레나',
      template:"elena",
      icon:'mdi-face-woman-outline',
      command:'mkelena {FILENAME} && elena-lc {ARGS} {FILENAME}.project && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?\\((\\d+):\\d+\\): (.+)",
      keyBindings: null
    },
    'Elm':{
      highlighting:"elm",
      ext: 'elm',
      kor: '엘름',
      template:"elm",
      icon:'mdi-view-dashboard',
      args: "--optimize",
      command:'echo Y|elm init 2> /dev/null; elm make {ARGS} {FILENAME}.{EXT} && imshow index.html',
      cli: "elm repl",
      errorRegEx: "(\\d+)\\| .+?\r\n  .+?\r\n(.+)",
      keyBindings: null
    },
    'Elixir':{
      highlighting:"elixir",
      ext: 'exs',
      kor: '엘릭서',
      template:"elixir",
      icon:'mdi-water-outline',
      command:'elixir {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "\\*\\* \\(\\w+\\) .+?:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'EMacs Lisp':{
      highlighting:"lisp",
      ext: 'exs',
      kor: '이맥스 리스프',
      template:"elisp",
      icon:'mdi-alpha-e-circle',
      args: "--no-site-file",
      command:'emacs {ARGS} --script {FILENAME}.{EXT}',
      cli: "emacs {ARGS} --execute '(ielm)'",
      keyBindings: null
    },
    'Emerald':{
      highlighting:"emerald",
      ext: 'm',
      kor: '에메랄드',
      template:"emerald",
      icon:'mdi-hexagon-outline',
      command:'export EMERALDROOT=/opt/emerald\nec {FILENAME}.{EXT} && emx {ARGS} {FILENAME}.x',
      cli: null,
      errorRegEx: '".+?\\.m", line (\\d+): (.+)',
      keyBindings: null
    },
    'Emo':{
      highlighting:"emo",
      ext: 'emo',
      kor: '이모',
      template:"emo",
      icon:'mdi-emoticon-wink-outline',
      command:"emo {ARGS} {FILENAME}.{EXT}",
      cli: 'emo',
      errorRegEx: "\\[line (\\d+)\\] (.*)",
      keyBindings: null
    },
    'Emscripten':{
      highlighting:"cpp",
      ext: 'cc',
      kor: '웹어셈블리(C++)',
      template:"wasm_c",
      icon:'mdi-alpha-w-box-outline',
      command:"source /opt/emsdk/emsdk_env.sh 2> /dev/null\nemcc {ARGS} {FILENAME}.{EXT} -o {FILENAME}.html -s WASM=0 -s SINGLE_FILE=1 && imshow {FILENAME}.html",
      cli: null,
      errorRegEx: ".+?:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Erlang':{
      highlighting:"erlang",
      ext: 'erl',
      kor: '얼랭',
      template:"erlang",
      icon:'mdi-alpha-e-circle-outline',
      command:'escript {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?:(\\d+):\\d+: (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_E)
    },
    'Esterel':{
      highlighting:"esterel",
      ext: 'strl',
      kor: '에스떼헬',
      template:"esterel",
      icon:'mdi-led-outline',
      args: '--verilog {FILENAME}.{EXT} && iverilog {FILENAME}.top.v {FILENAME}.v -o {FILENAME} && ./{FILENAME}',
      command:'/opt/esterel/bin/cec {ARGS}',
      cli: null,
      errorRegEx: "line (\\d+):(\\d+): (.+)",
      keyBindings: null
    },
    'Euphoria':{
      highlighting:"euphoria",
      ext: 'ex',
      kor: '유포리아',
      template:"euphoria",
      icon:'mdi-account-heart-outline',
      args: "-batch",
      command:'eui {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: "\\w+?\\.ex:(\\d+)\r\n(.+)",
      keyBindings: null
    },
    'Expect':{
      highlighting:"expect",
      ext: 'exp',
      kor: '익스펙트',
      template:"expect",
      icon:'mdi-arrow-decision-auto',
      args: null,
      command:'expect {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: 'file ".+?\\.exp" line (\\d+)(.*)',
      keyBindings: null
    },
    'Factor':{
      highlighting:"factor",
      ext: 'factor',
      kor: '팩터',
      template:"factor",
      icon:'mdi-google-downasaur',
      command:"factor {ARGS} {FILENAME}.{EXT}",
      cli: "factor {ARGS}",
      defaultFilename: 'Main',
      errorRegEx: "(\\d+): \\w+: .+?\r\n.+?\r\n(.+)",
      keyBindings: null
    },
    'Falcon':{
      highlighting:"falcon",
      ext: 'fal',
      kor: '팔콘',
      template:"falcon",
      icon:'mdi-alpha-f-circle',
      command:"falcon {ARGS} {FILENAME}.{EXT}",
      cli: "falcon -i {ARGS}",
      defaultFilename: 'Main',
      errorRegEx: ".+?:(\\d+): (.+)",
      keyBindings: null
    },
    'Fantom':{
      highlighting:"fantom",
      ext: 'fan',
      kor: '팬텀',
      template:"fantom",
      icon:'mdi-drupal',
      command:"fan {ARGS} {FILENAME}.{EXT}",
      cli: "fansh {ARGS}",
      defaultFilename: 'Main',
      errorRegEx: ".+?\\((\\d+),\\d+\\): (.+)",
      keyBindings: null
    },
    'Fe':{
      highlighting:"fe",
      ext: 'fe',
      kor: 'Fe',
      template:"fe",
      icon:'mdi-code-parentheses-box',
      command:"fe {ARGS} {FILENAME}.{EXT}",
      cli: 'fe',
      errorRegEx: null,
      keyBindings: null
    },
    'Felix':{
      highlighting:"felix",
      ext: 'flx',
      kor: '펠릭스',
      template:"felix",
      icon:'mdi-developer-board',
      command:"/opt/felix/bin/flx {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.flx: line (\\d+), (.+)",
      keyBindings: null
    },
    'Fennel':{
      highlighting:"lisp",
      ext: 'fnl',
      kor: '페널',
      template:"fennel",
      icon:'mdi-chart-donut',
      command:"fennel {ARGS} {FILENAME}.{EXT}",
      cli: "fennel {ARGS}",
      errorRegEx: ".+?\\.fnl:(\\d+)\r\n(.+)",
      keyBindings: null
    },
    'Feral':{
      highlighting:"feral",
      ext: 'fer',
      kor: '페럴',
      template:"feral",
      icon:'mdi-drama-masks',
      command:"/opt/feral/bin/feral {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\\.fer (\\d+)\\[\\d+\\]: (.+)",
      keyBindings: null
    },
    'Ferite':{
      highlighting:"ferite",
      ext: 'fe',
      kor: '페라이트',
      template:"ferite",
      icon:'mdi-set-none',
      command:"ferite {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "Error: .+?:(\\d+) (.+)",
      keyBindings: null
    },
    'Fexl':{
      highlighting:"fexl",
      ext: 'fxl',
      kor: '펙슬',
      template:"fexl",
      icon:'mdi-alpha-f-box-outline',
      command:"fexl {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+ on line (\\d+) (.+)",
      keyBindings: null
    },
    'Ficus':{
      highlighting:"ficus",
      ext: 'fx',
      kor: '파이쿠스',
      template:"ficus",
      icon:'mdi-tree-outline',
      args:'-run',
      command:"FICUS_PATH=/opt/ficus /opt/ficus/bin/ficus {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.fx:(\\d+):\\d+: error: (.+)",
      keyBindings: null
    },
    'Filagree':{
      highlighting:"filagree",
      ext: 'fg',
      kor: '필러그리',
      template:"filagree",
      icon:'mdi-focus-field',
      command:"filagree {ARGS} {FILENAME}.{EXT}",
      cli: "filagree",
      errorRegEx: "\\d+ - (?:.+\r\n)?.+?\\.fg,? line (\\d+)(.*)",
      keyBindings: null
    },
    'Fish':{
      highlighting:"shell",
      ext: 'fish',
      kor: '피쉬셸 - fish',
      template:"fish",
      icon:'mdi-fish',
      command:"fish {ARGS} {FILENAME}.{EXT}",
      cli: "fish",
      errorRegEx: ".+\r\n.+?\\.fish \\(line (\\d+)\\)(:)",
      keyBindings: null
    },
    'Flax':{
      highlighting:"flax",
      ext: 'flx',
      kor: '플랙스',
      template:"flax",
      icon:'mdi-cosine-wave',
      command:"/opt/flax/bin/flaxc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: "/opt/flax/bin/flaxc -repl {ARGS}",
      errorRegEx: ".+?: .+?\r\nat: .+?\\.flx:(\\d+):(.+)",
      keyBindings: null
    },
    'Flix':{
      highlighting:"flix",
      ext: 'flix',
      kor: '플릭스',
      template:"flix",
      icon:'mdi-cosine-wave',
      command:"java -jar /opt/flix/flix.jar {ARGS} {FILENAME}.{EXT}",
      cli: "java -jar /opt/flix/flix.jar",
      errorRegEx: ".+\\(line (\\d+), column \\d+\\):(.*)",
      keyBindings: null
    },
    'Focal':{
      highlighting:"focal",
      ext: 'foc',
      kor: '포컬',
      template:"focal",
      icon:'mdi-focus-field-horizontal',
      command:"focal {ARGS} {FILENAME}.{EXT}",
      cli: "focal {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'Forth':{
      highlighting:"forth",
      ext: 'fth',
      kor: '포스',
      template:"forth",
      icon:'mdi-dice-4-outline',
      command:"gforth {ARGS} {FILENAME}.{EXT} -e bye",
      cli: "gforth {ARGS}",
      errorRegEx: ".+?:(\\d+): (.+)",
      keyBindings: null
    },
    'Fortran':{
      highlighting:"fortran",
      ext: 'f90',
      kor: '포트란',
      template:"fortran",
      icon:'mdi-language-fortran',
      command:"gfortran {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?:(\\d+):\\d+:.+?\r\n\r\n +\\d+ .+?\r\n.+?\r\n(.+)",
      keyBindings: null
    },
    'fox-lang':{
      highlighting:"fox",
      ext: 'fox',
      kor: '폭스랭',
      template:"fox",
      icon:'mdi-firefox',
      command:"fox {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\r\n.+?\\.fox\\((\\d+)\\)(.*)",
      keyBindings: null
    },
    'Foxely':{
      highlighting:"foxely",
      ext: 'fox',
      kor: '폭슬리',
      template:"foxely",
      icon:'mdi-tailwind',
      command:"foxely {ARGS} {FILENAME}.{EXT}",
      cli: 'foxely',
      errorRegEx: "\\[line (\\d+)\\] (.+)",
      keyBindings: null
    },
    'Frege':{
      highlighting:"frege",
      ext: 'fr',
      kor: '프레게',
      template:"frege",
      icon:'mdi-coffee',
      command:"frege {ARGS} {FILENAME}.{EXT} && run_frege {FILENAME}",
      cli: "frege {ARGS}",
      defaultFilename: 'Main',
      errorRegEx: "E .+?\\.fr:(\\d+): (.+)",
      keyBindings: null
    },
    'Frink':{
      highlighting:"frink",
      ext: 'frink',
      kor: '프링크',
      template:"frink",
      icon:'mdi-emoticon-neutral-outline',
      command:"frink {ARGS} {FILENAME}.{EXT}",
      cli: "frink {ARGS}",
      errorRegEx: ".+?: file:.+?, line (\\d+)(.*)",
      keyBindings: null
    },
    'F# - mono':{
      highlighting:"fsharp",
      ext: 'fsx',
      kor: 'F Sharp - fsharpi',
      template:"fsmono",
      icon:'mdi-alpha-f',
      args: '--nologo',
      command:"fsharpc {ARGS} {FILENAME}.{EXT} && mono ./{FILENAME}.exe",
      cli: 'fsharpi',
      errorRegEx: ".*?\\((\\d+),\\d+\\): error (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_F)
    },
    'F# - .NET Core':{
      highlighting:"fsharp",
      ext: 'fs',
      kor: 'F Sharp - dotnet',
      template:"fsharp",
      icon:'mdi-alpha-f',
      command:'([ -d {FILENAME}_F ] || dotnet new console -lang "F#" -o {FILENAME}_F) && mv -f {FILENAME}.{EXT} {FILENAME}_F/Program.{EXT} && dotnet run {ARGS} --project {FILENAME}_F',
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?\\((\\d+),\\d+\\): error .+?: (.+)",
      keyBindings: null
    },
    'FunL':{
      highlighting:"funl",
      ext: 'fnl',
      kor: '펀엘',
      template:"funl",
      icon:'mdi-emoticon-lol-outline',
      command:"funla {ARGS} {FILENAME}.{EXT}",
      cli: "funla -repl {ARGS}",
      errorRegEx: ".*?rror: .+?ine[: ](\\d+)[: ](.+)",
      keyBindings: null
    },
    'Futhark':{
      highlighting:"futhark",
      ext: 'fut',
      kor: '푸타르크',
      template:"futhark",
      icon:'mdi-zodiac-libra',
      args:"c",
      command:"futhark {ARGS} {FILENAME}.{EXT} && read -p '입력값: ' i && (echo $i | ./{FILENAME})",
      cli: "futhark repl",
      errorRegEx: "Error at .+?\\.fut:(\\d+):(.*)",
      keyBindings: null
    },
    'Gambas':{
      highlighting:"vb",
      ext: 'bas',
      kor: '감바스',
      template:'gambas',
      icon:'mdi-arm-flex-outline',
      command:'gbs3 {ARGS} {FILENAME}.{EXT}',
      errorRegEx: ".+?:(\\d+):\\d+: \\w+: (.+)",
      keyBindings: null
    },
    'GAP':{
      highlighting:"gap",
      ext: 'g',
      kor: '갭',
      template:"gap",
      icon:'mdi-cards-diamond-outline',
      args: '-q -b --nointeract',
      command:"gap {ARGS} {FILENAME}.{EXT}",
      cli: "gap",
      errorRegEx: ".+? error: .+?\\.g:(\\d+)(.*)",
      keyBindings: null
    },
    'GEL':{
      highlighting:"gel",
      ext: 'gel',
      kor: 'GEL - Genius Mathematics',
      template:"gel",
      icon:'mdi-matrix',
      command:"genius {ARGS} {FILENAME}.{EXT}",
      cli: "genius",
      errorRegEx: ".+?\\.gel:(\\d+): (ERROR:.+)",
      keyBindings: null
    },
    'Genie':{
      highlighting:"genie",
      ext: 'gs',
      kor: '지니',
      template:"genie",
      icon:'mdi-oil-lamp',
      command:"valac {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?:(\\d+).\\d+-\\d+\\.\\d+:(.*)",
      keyBindings: null
    },
    'Gentee':{
      highlighting:"gentee",
      ext: 'g',
      kor: '젠티',
      template:"gentee",
      icon:'mdi-contain',
      command:"gentee {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "ERROR: .+? \\[(\\d+):\\d+\\] (.+)",
      keyBindings: null
    },
    'Genyris':{
      highlighting:"genyris",
      ext: 'g',
      kor: '제니리스',
      template:"genyris",
      icon:'mdi-creation',
      command:"genyris {ARGS} {FILENAME}.{EXT}",
      cli: "genyris {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'Gwion':{
      highlighting:"gwion",
      ext: 'gw',
      kor: '귀온',
      template:"gwion",
      icon:'mdi-music',
      args: '-p /opt/gwion/lib',
      command:"/opt/gwion/bin/gwion {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.gw.*?:(\\d+):\\d+:(.*)",
      keyBindings: null
    },
    'Gluon':{
      highlighting:"gluon",
      ext: 'glu',
      kor: '글루온',
      template:"gluon",
      icon:'mdi-eyedropper-variant',
      args: '--color never',
      command:"gluon {ARGS} {FILENAME}.{EXT}",
      cli: "gluon -i {ARGS}",
      errorRegEx: "error: .+\r\n(?:.+\r\n)+?  ┌─ .+?:(\\d+):(\\d)",
      keyBindings: null
    },
    'Gnuplot':{
      highlighting:"gnuplot",
      ext: 'plt',
      kor: '그누플롯',
      template:"gnuplot",
      icon:'mdi-chart-box-outline',
      args: '-e "set terminal svg enhanced background rgb \'white\' size 640,480; set lmargin 0;set rmargin 0;set tmargin 0;set bmargin 0;set output \'{FILENAME}.svg\'"',
      command:"gnuplot {ARGS} {FILENAME}.{EXT} && ([[ ! -s {FILENAME}.svg ]] || imshow {FILENAME}.svg)",
      cli: "gnuplot {ARGS}",
      errorRegEx: ".+? line (\\d+): (.*)",
      keyBindings: null
    },
    'Go':{
      highlighting:"go",
      ext: 'go',
      kor: '고',
      template:"go",
      icon:'mdi-language-go',
      command:"go build {ARGS} -i {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+:(\\d+):\\d+: (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_G)
    },
    'Goat':{
      highlighting:"goat",
      ext: 'goat',
      kor: '고트',
      template:"goat",
      icon:'mdi-hexagon-multiple-outline',
      args: '--lib=/opt/goat/lib',
      command:"/opt/goat/goat {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/goat/goat {ARGS}",
      errorRegEx: null,
    },
    'Goby':{
      highlighting:"goby",
      ext: 'gb',
      kor: '고비',
      template:"goby",
      icon:'mdi-go-kart',
      command:"export GOBY_ROOT=/opt/goby\n/opt/goby/goby {ARGS} {FILENAME}.{EXT}",
      cli: "GOBY_ROOT=/opt/goby /opt/goby/goby -i",
      errorRegEx: "(?:.+\r\nfrom .+?\\.gb:|.+? Line: )(\\d+)(.*)",
      keyBindings: null
    },
    'GolfScript':{
      highlighting:"golfscript",
      ext: 'gs',
      kor: '골프스크립트',
      template:"golfscript",
      icon:'mdi-golf-tee',
      command: 'golfscript {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Golo':{
      highlighting:"golo",
      ext: 'golo',
      kor: '골로',
      template:"golo",
      icon:'mdi-alpha-g-circle-outline',
      args: 'golo --files {FILENAME}.{EXT}',
      command:"golo {ARGS}",
      cli: null,
      errorRegEx: "\\[.*?error.*?\\] .+? at {line=(\\d+), column=\\d+}(.*)",
      keyBindings: null
    },
    'Gosu':{
      highlighting:"gosu",
      ext: 'gsp',
      kor: '고수',
      template:"gosu",
      icon:'mdi-alpha-g-circle',
      command: 'gosu {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+? \\[line:(\\d+) col:(\\d+)\\] in",
      keyBindings: null
    },
    'Grace':{
      highlighting:"grace",
      ext: 'grace',
      kor: '그레이스',
      template:"grace",
      icon:'mdi-weather-sunset',
      command:"GRACE_MODULE_PATH=/opt/grace/modules /opt/grace/mgc {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.grace\\[(\\d+):\\d+\\]: (.+)",
      keyBindings: null
    },
    'Gravity':{
      highlighting:"gravity",
      ext: 'gravity',
      kor: '그래비티',
      template:"gravity",
      icon:'mdi-checkbox-blank-circle',
      args: "-q",
      command:"gravity {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? ERROR .+? \\((\\d+),\\d+\\): (.+)",
      keyBindings: null
    },
    'Gri':{
      highlighting:"gri",
      ext: 'gri',
      kor: '그리',
      template:"gri",
      icon:'mdi-chart-timeline',
      args: "{FILENAME}.{EXT} && [ -f '{FILENAME}.ps' ] && gs -dBATCH -dNOPAUSE -sDEVICE=png16m -sOutputFile={FILENAME}.png {FILENAME}.ps && imshow {FILENAME}.png",
      command:"/opt/gri/bin/gri {ARGS}",
      cli: "/opt/gri/bin/gri",
      errorRegEx: ".+\r\n.+\\.gri:(\\d+)(.*)",
      keyBindings: null
    },
    'Groovy':{
      highlighting:"groovy",
      ext: 'groovy',
      kor: '그루비',
      template:"groovy",
      icon:'mdi-star-outline',
      command:"groovy {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?: (\\d+): (.+)",
      keyBindings: null
    },
    'GSL':{
      highlighting:"gsl",
      ext: 'gsl',
      kor: 'generator-scripting-language',
      template:"gsl",
      icon:'mdi-alpha-g-box',
      args: '-q',
      command:"gsl -q {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\(.+?\\.gsl (\\d+)\\)(.*)",
      keyBindings: null
    },
    'Guile':{
      highlighting:"lisp",
      ext: 'scm',
      kor: '가일 (3.0)',
      template:"guile",
      icon:'mdi-alpha-g',
      args: '--no-auto-compile',
      command:"guile {ARGS} {FILENAME}.{EXT}",
      cli: "guile {ARGS}",
      errorRegEx: "(?:.+?: )?.+?:(\\d+):\\d: (.+)",
      keyBindings: null
    },
    'GW-BASIC':{
      highlighting:"vb",
      ext: 'bas',
      kor: 'GW-베이식 - dos 16bit',
      template:"gwbasic",
      icon:'mdi-console-line',
      args: null,
      command:"unix2dos -q {FILENAME}.{EXT} && emu2 /opt/dos/gwbasic.exe < {FILENAME}.{EXT}",
      cli: "emu2 /opt/dos/gwbasic.exe",
      errorRegEx: null,
      keyBindings: null
    },
    'Haskell(ghc)':{
      highlighting:"haskell",
      ext: 'hs',
      kor: '하스켈 - ghc',
      template:"haskell",
      icon:'mdi-language-haskell',
      args: '-v0',
      command:"ghc {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: "ghci",
      errorRegEx: ".+:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Haskell(hugs)':{
      highlighting:"haskell",
      ext: 'hs',
      kor: '하스켈 - hugs',
      template:"hugs",
      icon:'mdi-language-haskell',
      command:"runhugs {ARGS} {FILENAME}.{EXT}",
      cli: "hugs",
      errorRegEx: ".+:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Hack':{
      highlighting:"hack",
      ext: 'hack',
      kor: '핵',
      template:"hack",
      icon:'mdi-facebook',
      command:"hhvm -m run {ARGS} {FILENAME}.{EXT}",
      cli: "hhvm -m debug",
      errorRegEx: ".+:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Have':{
      highlighting:"go",
      ext: 'hav',
      kor: '해브',
      template:"have",
      icon:'mdi-dog-service',
      args: "run",
      command:"GOPATH=~ have {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "ERROR: .+?:(\\d+): (.+)",
      keyBindings: null
    },
    'Haxe':{
      highlighting:"haxe",
      ext: 'hx',
      kor: '헥스',
      template:"haxe",
      icon:'mdi-axe',
      args: "--interp",
      command:"haxe {ARGS} --main {FILENAME}",
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?:(\\d+): .+? : (.+)",
      keyBindings: null
    },
    'Hedgehog':{
      highlighting:"hedgehog",
      ext: 'hg',
      kor: '헤지혹',
      template:"hedgehog",
      icon:'mdi-select-inverse',
      command:"hg {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.hg:(\\d+):(.+)",
      keyBindings: null
    },
    'Hermes':{
      highlighting:"hermes",
      ext: 'he',
      kor: '헤르메스',
      template:"hermes",
      icon:'mdi-shoe-formal',
      command:"hermes {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\[Line (\\d+)\\] (.+)",
      keyBindings: null
    },
    'Hexiscript':{
      highlighting:"hexi",
      ext: 'hexi',
      kor: '헥시스크립트',
      template:"hexi",
      icon:'mdi-script-text-outline',
      command:"hexi {ARGS} {FILENAME}.{EXT}",
      cli: null,
      keyBindings: null
    },
    'HLA':{
      highlighting:"hla",
      ext: 'hla',
      kor: 'HLA: 고수준어셈블리',
      template:"hla",
      icon:'mdi-decimal',
      args: "-i:/opt/hla/include -lib:/opt/hla/hlalib",
      command:"hla {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: "Error in .+?\\.hla\" at line (\\d+) .+\r\n(.+)",
      keyBindings: null
    },
    'Hope':{
      highlighting:"hope",
      ext: 'hop',
      kor: '호프',
      template:"hope",
      icon:'mdi-weather-partly-cloudy',
      command:"/opt/hope/bin/hope {ARGS} -f {FILENAME}.{EXT}",
      cli: "/opt/hope/bin/hope {ARGS}",
      errorRegEx: "line (\\d+): (.+)",
      keyBindings: null
    },
    'Horse64':{
      highlighting:"horse64",
      ext: 'h64',
      kor: '호스64',
      template:"horse64",
      icon:'mdi-horseshoe',
      args: 'run',
      command:"horsec {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.h64:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Huginn':{
      highlighting:"huginn",
      ext: 'hgn',
      kor: '후긴',
      template:"huginn",
      icon:'mdi-lightning-bolt',
      args: "--no-color",
      command:"LD_LIBRARY_PATH=/opt/huginn/lib huginn {ARGS} {FILENAME}.{EXT}",
      cli: "LD_LIBRARY_PATH=/opt/huginn/lib huginn {ARGS}",
      errorRegEx: ".+\\.hgn:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Huo':{
      highlighting:"huo",
      ext: 'huo',
      kor: '휴오',
      template:"huo",
      icon:'mdi-code-parentheses-box',
      command:"/opt/huo/bin/huo {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/huo/bin/huo",
      errorRegEx: null,
      keyBindings: null
    },
    'Hy':{
      highlighting:"hy",
      ext: 'hy',
      kor: '히',
      template:"hy",
      icon:'mdi-jellyfish-outline',
      command:"hy {ARGS} {FILENAME}.{EXT}",
      cli: "hy",
      errorRegEx: ".+?\\.hy\", line (\\d+), .+\r\n(.+\r\n.+)",
      keyBindings: null
    },
    'I':{
      highlighting:"i",
      ext: 'i',
      kor: 'I',
      template:"i",
      icon:'mdi-alpha-i',
      command:"/opt/i/I < {ARGS} {FILENAME}.{EXT}",
      cli: '/opt/i/I',
      errorRegEx: null,
      keyBindings: null
    },
    'ICI':{
      highlighting:"ici",
      ext: 'ici',
      kor: 'ICI',
      template:"ici",
      icon:'mdi-ice-pop',
      command:"ici {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.ici, (\\d+): (.+)",
      keyBindings: null
    },
    'Idris':{
      highlighting:"idris",
      ext: 'idr',
      kor: '이드리스',
      template:"idris",
      icon:'mdi-grass',
      command:'/opt/idris/bin/idris {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: "/opt/idris/bin/idris",
      errorRegEx: ".+\\.idr:(\\d+):\\d+(-\\d+)?:\r\n(  \\|.*\r\n)+.*?$",
      keyBindings: null
    },
    'Idris2':{
      highlighting:"idris",
      ext: 'idr',
      kor: '이드리스2',
      template:"idris2",
      icon:'mdi-grass',
      args: '-x {FILENAME} --no-color',
      command:'/opt/idris2/bin/idris2 {ARGS} {FILENAME}.{EXT}',
      cli: '/opt/idris2/bin/idris2',
      errorRegEx: "Error: .+\r\n\r\n.+?:(\\d+):\\d+(.+)",
      keyBindings: null
    },
    'Icon':{
      highlighting:"icon",
      ext: 'icn',
      kor: '아이콘',
      template:"icon",
      icon:'mdi-alpha-i-circle-outline',
      command:'icont {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+?; Line (\\d+) (.+)",
      keyBindings: null
    },
    'IDL':{
      highlighting:"idl",
      ext: 'pro',
      kor: '대화형데이터언어(GDL)',
      template:"idl",
      icon:'mdi-chart-bar-stacked',
      args: "-quiet",
      //command:'([ -f /tmp/xvfb.pid ] || (/etc/init.d/xvfb start && sleep 2)) && DISPLAY=:0 gdl {ARGS} {FILENAME}.{EXT}',
      command: 'echo -e "\\$rm -f main.png\\n.COMPILE {FILENAME}.{EXT}\\n{FILENAME}\\n\\$[ -f main.png ] && imshow main.png" | gdl {ARGS}',
      cli: "gdl {ARGS}",
      errorRegEx: "% .+?: .+?\r\n.+?: .+?, Line (\\d+)(.*)",
      keyBindings: null
    },
    'Inform':{
      highlighting:"inform",
      ext: 'inf',
      kor: '인폼 - inform 6.36',
      template:"inform",
      icon:'mdi-card-text-outline',
      command: 'inform {ARGS} {FILENAME}.{EXT} && frotz {FILENAME}.z5',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Ink':{
      highlighting:"ink",
      ext: 'ink',
      kor: '잉크',
      template:"ink",
      icon:'mdi-fountain-pen-tip',
      command: 'ink {ARGS} {FILENAME}.{EXT}',
      cli: 'ink -repl',
      errorRegEx: ".+? \\[(\\d+):\\d+\\]( in .+?\\.ink)",
      keyBindings: null
    },
    'INTERCAL':{
      highlighting:"intercal",
      ext: 'i',
      kor: '인터칼',
      template:"intercal",
      icon:'mdi-gate-and',
      command: 'ick {ARGS} {FILENAME}.{EXT} && ./{FILENAME}',
      cli: null,
      errorRegEx: "ON THE WAY TO (\\d+)(.*)",
      keyBindings: null
    },
    'Io':{
      highlighting:"io",
      ext: 'io',
      kor: '아이오',
      template:"io",
      icon:'mdi-gate-not',
      command: 'io {ARGS} {FILENAME}.{EXT}',
      cli: "io {ARGS}",
      errorRegEx: "  Exception: .+?\r\n  -+?\r\n.+(\\d+)(.*)",
      keyBindings: null
    },
    'Ioke':{
      highlighting:"ioke",
      ext: 'ik',
      kor: '아이오케',
      template:"ioke",
      icon:'mdi-weather-hurricane',
      command: 'ioke {ARGS} {FILENAME}.{EXT}',
      cli: "ioke {ARGS}",
      errorRegEx: ".+?\\.ik:(\\d+):\\d+(.+)",
      keyBindings: null
    },
    'Iphigeneia':{
      highlighting:"iphi",
      ext: 'iphi',
      kor: '이피게네이아',
      template:"iphi",
      icon:'mdi-flower',
      command: 'iphi {ARGS} {FILENAME}.{EXT}',
      errorRegEx: null,
      keyBindings: null
    },
    'J':{
      highlighting:"j",
      ext: 'j',
      kor: 'J언어',
      template:"j",
      icon:'mdi-alpha-j-box',
      command:"jconsole {ARGS} < {FILENAME}.{EXT}",
      cli: "jconsole",
      keyBindings: null
    },
    'J*':{
      highlighting:"jstar",
      ext: 'jsr',
      kor: 'J스타',
      template:"jstar",
      icon:'mdi-alpha-j-circle',
      command:"/opt/jstar/bin/jstar {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/jstar/bin/jstar",
      errorRegEx: ".+?\\[line[: ](\\d+)\\].+\r\n(.*)",
      keyBindings: null
    },
    'Jancy':{
      highlighting:"jancy",
      ext: 'jnc',
      kor: '잰시',
      template:"jancy",
      icon:'mdi-mushroom-outline',
      command:"jancy {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.jnc\\((\\d+),\\d+\\): (.+)",
      keyBindings: null
    },
    'Janet':{
      highlighting:"janet",
      ext: 'janet',
      kor: '자넷',
      template:"janet",
      icon:'mdi-face-woman',
      command:"janet {ARGS} {FILENAME}.{EXT}",
      cli: "janet {ARGS}",
      errorRegEx: ".+?\\.janet:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Jasmin':{
      highlighting:"jasmin",
      ext: 'j',
      kor: '자스민 - Java Assembler',
      template:"jasmin",
      icon:'mdi-coffee-to-go',
      command:"jasmin {ARGS} {FILENAME}.{EXT} && java -cp . {FILENAME}",
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?\\.j:(\\d+): (.+)",
      keyBindings: null
    },
    'Joao':{
      highlighting:"joao",
      ext: 'jao',
      kor: '주앙',
      template:"joao",
      icon:'mdi-soccer',
      command:"joao {ARGS} {FILENAME}.{EXT}",
      cli: "joao",
      errorRegEx: "LINE: (\\d+),\\d+ (.+)",
      keyBindings: null
    },
    'JohnsonScript':{
      highlighting:"johnsonscript",
      ext: 'john',
      kor: '존슨스크립트',
      template:"johnsonscript",
      icon:'mdi-sausage',
      command:"johnsonscript {FILENAME}.{EXT} {ARGS}",
      cli: null,
      errorRegEx: ".+? on line (\\d+)\r\n(.+)",
      keyBindings: null
    },
    'Jolie':{
      highlighting:"jolie",
      ext: 'jolie',
      kor: '졸리',
      template:"jolie",
      icon:'mdi-seed-outline',
      command:"export JOLIE_HOME=/opt/jolie\n/opt/jolie/bin/jolie {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Joy':{
      highlighting:"joy",
      ext: 'joy',
      kor: '조이',
      template:"joy",
      icon:'mdi-seed-outline',
      command:"/opt/joy/joy {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Jsish':{
      highlighting:"javascript1",
      ext: 'jsi',
      kor: '제이시',
      template:"jsish",
      icon:'mdi-coffee-to-go-outline',
      command:"jsish {ARGS} {FILENAME}.{EXT}",
      cli: "jsish {ARGS}",
      errorRegEx: ".+?:(\\d+): \\w+: (.+)",
      keyBindings: null
    },
    'JsonNet':{
      highlighting:"hcl",
      ext: 'jsonnet',
      kor: '제이슨넷',
      template:"jsonnet",
      icon:'mdi-code-json',
      command:"jsonnet {ARGS} {FILENAME}.{EXT}",
      cli: "jsonnet {ARGS}",
      errorRegEx: ".+?\\.jsonnet:(\\d+):\\d+(.+)",
      keyBindings: null
    },
    'JSP':{
      highlighting:"jsp",
      ext: 'jsp',
      kor: 'JSP',
      template:"jsp",
      icon:'mdi-alpha-j-box-outline',
      command:"mv -f {FILENAME}.{EXT} $JETTY_BASE/webapps/ROOT\nps -ef | grep start.jar | grep -v grep > /dev/null || (echo 'Starting JSP Server...' && (java -jar $JETTY_HOME/start.jar jetty.base=$JETTY_BASE 2> /dev/null &))\ncurl -4 -s --retry-connrefused --retry 10 --retry-delay 1 http://localhost:8080/{FILENAME}.{EXT} > {FILENAME}.html && imshow {FILENAME}.html",
      cli: null,
      keyBindings: null
    },
    'Jq':{
      highlighting:"jq",
      ext: 'jq',
      kor: 'Jq',
      template:"jq",
      icon:'mdi-code-json',
      args: "-n -f {FILENAME}.{EXT}",
      command:"jq {ARGS}",
      cli: null,
      errorRegEx: "jq: error: .+, line (\\d+):(.*)",
      keyBindings: null
    },
    'Julia':{
      highlighting:"julia",
      ext: 'jl',
      kor: '줄리아',
      template:"julia",
      icon:'mdi-google-circles-communities',
      command:"julia {ARGS} {FILENAME}.{EXT}",
      cli: "julia",
      errorRegEx: "in expression .+?:(\\d+)",
      keyBindings: null
    },
    'Jython':{
      highlighting:"python",
      ext: 'py',
      kor: '자이썬',
      template:"jython",
      icon:'mdi-language-java',
      command:"jython {ARGS} {FILENAME}.{EXT}",
      cli: 'jython {ARGS}',
      errorRegEx: ".*?, line (\\d+).*[\r\n]+(?:.*[\r\n]+)?(?:.*[\r\n]+)?(.*Error: .*)",
    },
    'K(kona)':{
      highlighting:"kona",
      ext: 'k',
      kor: '코나',
      template:"kona",
      icon:'mdi-alpha-k',
      command:"/opt/kona/bin/k {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/koka/bin/k {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'kenaf':{
      highlighting:"kenaf",
      ext: 'kn',
      kor: '케나프',
      template:"kenaf",
      icon:'mdi-fleur-de-lis',
      command:"kenaf {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'killa':{
      highlighting:"killa",
      ext: 'kia',
      kor: '킬라',
      template:"killa",
      icon:'mdi-thumb-up-outline',
      command:"killa {ARGS} {FILENAME}.{EXT}",
      cli: "killa",
      errorRegEx: ".+?\\.kia:(\\d+): (.+)",
      keyBindings: null
    },
    'Koka':{
      highlighting:"koka",
      ext: 'kk',
      kor: '코카',
      template:"koka",
      icon:'mdi-bottle-soda-classic-outline',
      args: '--console=raw -v0',
      command:"/opt/koka/bin/koka {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/koka/bin/koka {ARGS}",
      errorRegEx: ".+?\\.kk\\((\\d+), \\d+\\): (error.+)(\r\n .+)*",
      keyBindings: null
    },
    'Kos':{
      highlighting:"kos",
      ext: 'kos',
      kor: '코스',
      template:"kos",
      icon:'mdi-laser-pointer',
      command:"/opt/kos/bin/kos {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/kos/bin/kos {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'Knight':{
      highlighting:"knight",
      ext: 'kn',
      kor: '나이트',
      template:"knight",
      icon:'mdi-chess-knight',
      args: '-f',
      command:"python3 /opt/knight/main.py {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Kotlin':{
      highlighting:"kotlin",
      ext: 'kt',
      kor: '코틀린',
      template:"kotlin",
      icon:'mdi-language-kotlin',
      args: '-include-runtime',
      command:"kotlinc {FILENAME}.{EXT} {ARGS} -d {FILENAME}.jar && java -jar {FILENAME}.jar",
      cli: "kotlin",
      errorRegEx: ".+?:(\\d+):\\d+: .+: (.*)",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K)
    },
    'Kotlin Script':{
      highlighting:"kotlin",
      ext: 'kts',
      kor: '코틀린스크립트',
      template:"kotlinscript",
      icon:'mdi-language-kotlin',
      command:"kotlinc -script {FILENAME}.{EXT} {ARGS}",
      cli: "kotlin",
      errorRegEx: ".+?:(\\d+):\\d+: .+: (.*)",
      keyBindings: null
    },
    'kscript':{
      highlighting:"kscript",
      ext: 'ks',
      kor: '케이스크립트',
      template:"kscript",
      icon:'mdi-alpha-k-box',
      command:"/opt/kscript/bin/ks {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/kscript/bin/ks {ARGS}",
      errorRegEx: ".+\r\n.+\r\n.+\\.ks\\' \\(line (\\d+), (.+?\\):)",
      keyBindings: null
    },
    'LaTeX':{
      highlighting:"tex",
      ext: 'tex',
      kor: '레이텍',
      template:"latex",
      icon:'mdi-newspaper-variant-multiple-outline',
      args: "-output-format=pdf",
      command:"latex {ARGS} {FILENAME}.{EXT} && imshow {FILENAME}.pdf",
      cli: "latex {ARGS}",
      keyBindings: null
    },
    'Latro':{
      highlighting:"latro",
      ext: 'l',
      kor: '라트로',
      template:"latro",
      icon:'mdi-hexagram-outline',
      args:'/opt/latro/lib/Core.l',
      command:"latroi {ARGS} {FILENAME}.{EXT}",
      cli: "latroi -i",
      errorRegEx: ".+?\\.l:(\\d+):\\d+:? (.+)",
      keyBindings: null
    },
    'Lean':{
      highlighting:"lean",
      ext: 'lean',
      kor: '린',
      template:"lean",
      icon:'mdi-water-minus-outline',
      args: "--run",
      command:"lean {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.lean:(\\d+):\\d+: error: (.+)",
      keyBindings: null
    },
    'LeekScript':{
      highlighting:"leekscript",
      ext: 'leek',
      kor: '릭스크립트',
      template:"leekscript",
      icon:'mdi-leek',
      command:"leekscript {ARGS} {FILENAME}.{EXT}",
      cli: "leekscript",
      errorRegEx: ".*\r\n.+?\\.leek:(\\d+):(.*)",
      keyBindings: null
    },
    'Lemon':{
      highlighting:"lemon",
      ext: 'lm',
      kor: '레몬',
      template:"lemon",
      icon:'mdi-set-left',
      command:"lemon {ARGS} {FILENAME}.{EXT}",
      cli: "lemon",
      errorRegEx: ".+?\\.lm:(\\d+):\\d+: error: (.+)",
      keyBindings: null
    },
    'Levi':{
      highlighting:"levi",
      ext: 'lvi',
      kor: '레비',
      template:"levi",
      icon:'mdi-television-classic',
      command:"levi {ARGS} {FILENAME}.{EXT}",
      cli: "levi",
      errorRegEx: null,
      keyBindings: null
    },
    'LDPL':{
      highlighting:"ldpl",
      ext: 'ldpl',
      kor: 'LDPL',
      template:"ldpl",
      icon:'mdi-baby-face-outline',
      args: "-n",
      command:"ldpl {ARGS} {FILENAME}.{EXT} -o={FILENAME} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?: .+? \\(.+?:(\\d+)(.*)?\\).*",
      keyBindings: null
    },
    'Lily':{
      highlighting:"lily",
      ext: 'lily',
      kor: '릴리',
      template:"lily",
      icon:'mdi-flower-poppy',
      command:"lily {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\w+?: .+\r\n.+?:(\\d+):(.*)?",
      keyBindings: null
    },
    'Limbo':{
      highlighting:"limbo",
      ext: 'b',
      kor: '림보',
      template:"limbo",
      icon:'mdi-spider-thread',
      args: "-I /opt/inferno/module -o ~/{FILENAME}.dis {FILENAME}.{EXT} && /opt/inferno/bin/emu -c1 -r/opt/inferno ext/{FILENAME}.dis",
      command:"/opt/inferno/bin/limbo {ARGS}",
      cli: null,
      errorRegEx: ".+?\\.b:(\\d+): (.+)",
      keyBindings: null
    },
    'Lisaac':{
      highlighting:"lisaac",
      ext: 'li',
      kor: '리삭',
      template:"lisaac",
      icon:'mdi-bullseye',
      args: '-q -gcc -Wno-implicit-function-declaration',
      command:"lisaac {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Little':{
      highlighting:"little",
      ext: 'l',
      kor: '리틀',
      template:"little",
      icon:'mdi-bottle-soda-outline',
      command:"L {ARGS} {FILENAME}.{EXT}",
      cli: "L {ARGS}",
      errorRegEx: ".+\\.l:(\\d+): (.+)",
      keyBindings: null
    },
    'LittleLang':{
      highlighting:"littlelang",
      ext: 'll',
      kor: '리틀랭',
      template:"littlelang",
      icon:'mdi-bullet',
      command:"littlelang {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+ (\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'LiveScript':{
      highlighting:"livescript",
      ext: 'ls',
      kor: '라이브스크립트',
      template:"livescript",
      icon:'mdi-checkerboard',
      command:"lsc {ARGS} {FILENAME}.{EXT}",
      cli: "lsc {ARGS}",
      errorRegEx: "\\w+: .+? line (\\d+)(: .+)?",
      keyBindings: null
    },
    'LK':{
      highlighting:"lk",
      ext: 'lk',
      kor: 'LK',
      template:"lk",
      icon:'mdi-alpha-l-circle-outline',
      command:"lk {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "^(\\d+): (.+)",
      keyBindings: null
    },
    'LLVM-IR':{
      highlighting:"llvm",
      ext: 'll',
      kor: 'LLVM-IR',
      template:"llvm",
      icon:'mdi-middleware-outline',
      args: "-Wno-override-module",
      command:"clang -o {FILENAME} {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: "null",
      errorRegEx: ".+?\\.ll:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Lobster':{
      highlighting:"lobster",
      ext: 'lobster',
      kor: '랍스터',
      template:"lobster",
      icon:'mdi-fountain',
      args: '--import /opt/lobster/modules',
      command:"/opt/lobster/bin/lobster {FILENAME}.{EXT} {ARGS}",
      cli: null,
      errorRegEx: ".+?\\.lobster\\((\\d+)\\): (.+)",
      keyBindings: null
    },
    'Logo':{
      highlighting:"logo",
      ext: 'logo',
      kor: '로고',
      template:"logo",
      icon:'mdi-turtle',
      command:"ucblogo < {ARGS} {FILENAME}.{EXT}",
      cli: "ucblogo {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'LOLCODE':{
      highlighting:"lolcode",
      ext: 'lol',
      kor: '롤코드',
      template:"lolcode",
      icon:'mdi-sword',
      command:"lci {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\\.lol:(\\d+): (.+)",
      keyBindings: null
    },
    'Loli':{
      highlighting:"loli",
      ext: 'li',
      kor: '롤리',
      template:"loli",
      icon:'mdi-candycane',
      command:"/opt/loli/loli {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/loli/loli",
      errorRegEx: ".+\r\n    from .+?\\.li:(\\d+)(:.*)",
      keyBindings: null
    },
    'Lox':{
      highlighting:"lox",
      ext: 'lox',
      kor: '록스',
      template:"lox",
      icon:'mdi-compass-outline',
      command:"loxi {ARGS} {FILENAME}.{EXT}",
      cli: "loxi {ARGS}",
      errorRegEx: "\\[line (\\d+)\\] (Error.+)",
      keyBindings: null
    },
    'Lua':{
      highlighting:"lua",
      ext: 'lua',
      kor: '루아',
      template:"lua",
      icon:'mdi-language-lua',
      command:"lua {ARGS} {FILENAME}.{EXT}",
      cli: "lua {ARGS}",
      errorRegEx: "lua: .+?:(\\d+): (.*)",
      keyBindings: null
    },
    'Luci':{
      highlighting:"luci",
      ext: 'luci',
      kor: '루시',
      template:"luci",
      icon:'mdi-alpha-l',
      command:"luci {ARGS} {FILENAME}.{EXT}",
      cli: "luci",
      errorRegEx: ".+? line #(\\d+), (col #\\d+)",
      keyBindings: null
    },
    'Lumi':{
      highlighting:"lumi",
      ext: '5.lm',
      kor: '루미',
      template:"lumi",
      icon:'mdi-gender-female',
      command:"lumi {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+\\.lm\\[(\\d+)\\](.+)",
      keyBindings: null
    },
    'Luxury':{
      highlighting:"luxury",
      ext: 'lux',
      kor: '럭셔리',
      template:"luxury",
      icon:'mdi-watch-variant',
      command:"luxury {ARGS} {FILENAME}.{EXT} {FILENAME}.s && gcc -static -o {FILENAME} {FILENAME}.s && ./{FILENAME}",
      cli: null,
      errorRegEx: " +(\\d+) \\| (.+\r\n.*\r\n.*)",
      keyBindings: null
    },
    'M4':{
      highlighting:"m4",
      ext: 'm4',
      kor: 'M4',
      template:"m4",
      icon:'mdi-alpha-m-box-outline',
      command:"m4 {ARGS} {FILENAME}.{EXT}",
      cli: "m4 {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'Make':{
      highlighting:"make",
      ext: 'makefile',
      kor: '메이크 - gnumake',
      template:"make",
      icon:'mdi-order-alphabetical-ascending',
      command:"make {ARGS} -f {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.makefile:(\\d+): (.*)",
      keyBindings: null
    },
    'Mari':{
      highlighting:"mari",
      ext: 'mr',
      kor: '마리',
      template:"mari",
      icon:'mdi-globe-light',
      args: '-o {FILENAME}',
      command:"mari {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.mr:(\\d+):\\d+ (.+)\r\n(.*)",
      keyBindings: null
    },
    'MASM 4.0':{
      highlighting:"tasm",
      ext: 'asm',
      kor: '매크로어셈블러 4.0 - dos 16bit',
      template:"masm40",
      icon:'mdi-hexadecimal',
      command:"unix2dos -q {FILENAME}.{EXT} && emu2 /opt/dos/masm40/MASM.EXE {ARGS} {FILENAME}.{EXT} {FILENAME}.obj NUL NUL && (echo | emu2 /opt/dos/masm40/LINK.EXE {ARGS} {FILENAME}.obj) > /dev/null && emu2 {FILENAME}.exe",
      cli: null,
      errorRegEx: ".+\\.asm\\((\\d+)\\) : (.+)",
      keyBindings: null
    },
/*  'MAsm 5.10':{
      highlighting:"tasm",
      ext: 'asm',
      kor: '매크로어셈블러 5.1',
      template:"masm51",
      icon:'mdi-hexadecimal',
      command:"emu2 /opt/dos/masm51/MASM.EXE {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\\.asm\\((\\d+)\\) : (.+)",
      keyBindings: null
    },
*/
    'Maude':{
      highlighting:"maude",
      ext: 'maude',
      kor: '모드',
      template:"maude",
      icon:'mdi-image-frame',
      args: "-no-banner",
      command:"/opt/maude/maude {ARGS} < {FILENAME}.{EXT}",
      cli: "/opt/maude/maude",
      errorRegEx: ".+?, line (\\d+)(.*?): (.+)",
      keyBindings: null
    },
    'Maxc':{
      highlighting:"maxc",
      ext: 'mxc',
      kor: 'Maxc',
      template:"maxc",
      icon:'mdi-code-less-than-or-equal',
      command:'maxc {ARGS} {FILENAME}.{EXT}',
      cli: 'maxc',
      keyBindings: null
    },
    'Maxima':{
      highlighting:"maxima",
      ext: 'mac',
      kor: '맥시마',
      template:"maxima",
      icon:'mdi-rhombus-split-outline',
      args: "--very-quiet",
      command:"maxima {ARGS} < {FILENAME}.{EXT}",
      cli: "maxima {ARGS}",
      keyBindings: null
    },
    'Melon':{
      highlighting:"melon",
      ext: 'ms',
      kor: '멜론',
      template:"melon",
      icon:'mdi-fruit-watermelon',
      command:"/opt/melon/bin/melon {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\(at line (\\d+):(.*)",
      keyBindings: null
    },
    'Mercury':{
      highlighting:"mercury",
      ext: 'm',
      kor: '머큐리',
      template:"mercury",
      icon:'mdi-decagram',
      command:"mmc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.m:(\\d+): (.*)",
      keyBindings: null
    },
    'Miniscript':{
      highlighting:"miniscript",
      ext: 'ms',
      kor: '미니스크립트',
      template:"miniscript",
      icon:'mdi-panda',
      command:"miniscript {ARGS} {FILENAME}.{EXT}",
      cli: "miniscript {ARGS}",
      errorRegEx: ".+?: .+?\\[line (\\d+)\\](.*)",
      keyBindings: null
    },
    'MiniZinc':{
      highlighting:"minizinc",
      ext: 'mzn',
      kor: '미니징크',
      template:"minizinc",
      icon:'mdi-rectangle-outline',
      command:"/opt/minizinc/bin/minizinc {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.mzn:(\\d+)\\..+\r\n(.+)?",
      keyBindings: null
    },
    'Mirah':{
      highlighting:"mirah",
      ext: 'mirah',
      kor: '미라',
      template:"mirah",
      icon:'mdi-alpha-m-box',
      command:"/opt/mirah/bin/mirah {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Miranda':{
      highlighting:"miranda",
      ext: 'm',
      kor: '미란다',
      template:"miranda",
      icon:'mdi-human-female',
      args:'-lib /opt/miranda/lib',
      command:"/opt/miranda/bin/mira {ARGS} -exec {FILENAME}.{EXT}",
      cli: "/opt/miranda/bin/mira {ARGS}",
      errorRegEx: ".+ error.+?\r\nerror.+?line (\\d+)( of file \".+?\\.m\")",
      keyBindings: null
    },
    'Mirth':{
      highlighting:"mirth",
      ext: 'mth',
      kor: '머스',
      template:"mirth",
      icon:'mdi-alpha-m-box',
      command:"mkdir -p bin src\nln -sf /opt/mirth/src/* src\nmv {FILENAME}.{EXT} src && mirth {ARGS} {FILENAME}.{EXT} && make bin/{FILENAME} && bin/{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.mth:(\\d+):\\d+: error:(.+)",
      keyBindings: null
    },
    'Modula-2':{
      highlighting:"m3",
      ext: 'mod',
      kor: '모듈라-2 - gm2',
      template:"m2",
      icon:'mdi-view-module-outline',
      command:'gm2 {ARGS} -o {FILENAME} {FILENAME}.{EXT} /usr/lib/x86_64-linux-gnu/libm2iso.so.15 && ./{FILENAME}',
      cli: null,
      errorRegEx: ".+\\.mod:(\\d+):\\d+:(.+)",
      keyBindings: null
    },
    'Modula-3':{
      highlighting:"m3",
      ext: 'm3',
      kor: '모듈라-3 - cm3',
      template:"m3",
      icon:'mdi-view-module-outline',
      args: "-silent",
      command:'echo -e \'import("libm3")\\nimplementation("{FILENAME}")\\nprogram("{FILENAME}")\' > m3makefile && cm3 {ARGS} && AMD64_LINUX/{FILENAME}',
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+?, line (\\d+): (.+)",
      keyBindings: null
    },
    'MongoDB':{
      highlighting:"javascript1",
      ext: 'bson',
      kor: '몽고DB',
      template:"mongodb",
      icon:'mdi-leaf',
      command:"ps -ef | grep mongod | grep -v grep > /dev/null || (echo 'Starting MongoDB...' && (sudo mongod {ARGS} -f /etc/mongodb.conf --fork > /dev/null))\nmongo --quiet < {FILENAME}.{EXT}",
      cli: "ps -ef | grep mongod | grep -v grep > /dev/null || (echo 'Starting MongoDB...' && (sudo mongod {ARGS} -f /etc/mongodb.conf --fork > /dev/null))\nmongo --quiet",
      keyBindings: null
    },
    'Monkey':{
      highlighting:"monkey",
      ext: 'mnk',
      kor: '몽키 - cmonkey',
      template:"monkey",
      icon:'mdi-robber',
      command:"/opt/cmonkey/bin/monkey {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/cmonkey/bin/monkey",
      errorRegEx: null,
      keyBindings: null
    },
    'MoonScript':{
      highlighting:"moonscript",
      ext: 'moon',
      kor: '문스크립트',
      template:"moonscript",
      icon:'mdi-moon-waning-crescent',
      command: "moon {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?: .+?:(\\d+): (.+)",
      keyBindings: null
    },
    'Mu':{
      highlighting:"mu",
      ext: 'mu',
      kor: '뮤',
      template:"mu",
      icon:'mdi-alpha-m',
      command: "mux {ARGS} {FILENAME}.{EXT}",
      cli: "mux",
      errorRegEx: "error: .+?on line (\\d+)(.*)",
      keyBindings: null
    },
    'MUMPS':{
      highlighting:"mumps",
      ext: 'mps',
      kor: 'MUMPS',
      template:"mumps",
      icon:'mdi-pot',
      command: "mumps {ARGS} {FILENAME}.{EXT}",
      cli: "mumps {ARGS}",
      //errorRegEx: "Failed .+?:\r\n \\[(\\d+)\\](.+)",
      errorRegEx: "\\*\\*\\* .+ line (\\d+):(\r\n.*\r\n\\*\\*\\* .+)",
      keyBindings: null
    },
    'Muon':{
      highlighting:"muon",
      ext: 'mu',
      kor: '뮤온',
      template:"muon",
      icon:'mdi-palm-tree',
      args:'/opt/muon/lib/core.mu',
      command: "/opt/muon/bin/mu {ARGS} {FILENAME}.{EXT} --output-file {FILENAME}.c && make {FILENAME} && ./{FILENAME}",
      cli: "/opt/muon/bin/mu {ARGS}",
      errorRegEx: ".+\r\n-> .+?\\.mu:(\\d+)(.*)",
      keyBindings: null
    },
    'Myrddin':{
      highlighting:"myrddin",
      ext: 'myr',
      kor: '머딘',
      template:"myrddin",
      icon:'mdi-shield-cross-outline',
      command:"PATH=$PATH:/opt/myrddin/bin mbld {ARGS} -b {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+\\.myr:(\\d+): (.+)",
      keyBindings: null
    },
    'MY-BASIC':{
      highlighting:"mybasic",
      ext: 'bas',
      kor: '마이베이식',
      template:"mybasic",
      icon:'mdi-lightbulb-on-outline',
      command:"mybasic {ARGS} {FILENAME}.{EXT}",
      cli: "mybasic {ARGS}",
      errorRegEx: "Error:\r\n.+?Ln (\\d+), Col \\d+\r\n.+?\r\n(.+)",
      keyBindings: null
    },
    'MySQL(mariadb)':{
      highlighting:"mysql",
      ext: 'sql',
      kor: '마이SQL - mariadb',
      template:"mysql",
      icon:'mdi-database-search',
      args: '-D ryugod',
      command:"ps -ef | grep mysqld | grep -v grep > /dev/null || sudo service mysql start\nmysql {ARGS} -H < {FILENAME}.{EXT} > {FILENAME}.html && imshow {FILENAME}.html",
      cli: "ps -ef | grep mysqld | grep -v grep > /dev/null || sudo service mysql start\nmysql {ARGS}",
      errorRegEx: ".+? at line (\\d+): (.+)",
      keyBindings: null
    },
    'Mythryl':{
      highlighting:"mythryl",
      ext: 'mythryl',
      kor: '미스릴',
      template:"mythryl",
      icon:'mdi-sword-cross',
      command:"chmod a+x {FILENAME}.{EXT} && ./{FILENAME}.{EXT}",
      cli: "/opt/mythryl/bin/mythryld",
      errorRegEx: ".+?:(\\d+).*? Error:(.+)",
      keyBindings: null
    },
    'Nanoquery':{
      highlighting:"nanoquery",
      ext: 'nano',
      kor: '네코',
      template:"nanoquery",
      icon:'mdi-gesture',
      command:"nq {ARGS} {FILENAME}.{EXT}",
      cli: "nq {ARGS}",
      keyBindings: null
    },
    'Nectar':{
      highlighting:"nectar",
      ext: 'nec',
      kor: '넥타르',
      template:"nectar",
      icon:'mdi-bee-flower',
      command:"([ -f {FILENAME} ] || nectar create {FILENAME}) && mv -f {FILENAME}.{EXT} {FILENAME}/src && \\\nnectar build {FILENAME} && nectar run {FILENAME}",
      defaultFilename: 'main_proj',
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Nelua':{
      highlighting:"lua",
      ext: 'nelua',
      kor: '넬루아',
      template:"nelua",
      icon:'mdi-earth',
      args: '--no-color',
      command:"nelua {ARGS} {FILENAME}.{EXT}",
      cli: "nelua-lua {ARGS}",
      errorRegEx: ".+?\\.nelua:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Neko':{
      highlighting:"neko",
      ext: 'neko',
      kor: '네코',
      template:"neko",
      icon:'mdi-robot',
      command:"nekoc {ARGS} {FILENAME}.{EXT} && neko {FILENAME}.n",
      cli: null,
      errorRegEx: ".+?\\.neko\\((\\d+)\\): (.+)",
      keyBindings: null
    },
    'NetRexx':{
      highlighting:"rexx",
      ext: 'nrx',
      kor: '넷렉스',
      template:"netrexx",
      icon:'mdi-cards',
      args: '-verbose0 -exec',
      command:"nrc {ARGS} {FILENAME}.{EXT}",
      defaultFilename: 'Main',
      cli: null,
      errorRegEx: " (\\d+) \\+\\+\\+ .+\r\n( +?\\+\\+\\+ .+\r\n)+",
      keyBindings: null
    },
/*
    'Nemerle':{
      highlighting:"csharp",
      ext: 'n',
      kor: '네머를',
      template:'nemerle',
      icon:'mdi-dot-net',
      command:"ncc {ARGS} {FILENAME}.{EXT} && mono {FILENAME}.exe",
      cli: "nemish",
      errorRegEx: ".+ line (\\d+).+\r\n(.+)",
      keyBindings: null
    },
*/
    'Never':{
      highlighting:"never",
      ext: 'nev',
      kor: '네버',
      template:"never",
      icon:'mdi-directions-fork',
      command:"/opt/never/bin/never {ARGS} -f {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.nev:(\\d+): (.+)",
      keyBindings: null
    },
    'NewLisp':{
      highlighting:"lisp",
      ext: 'lsp',
      kor: '뉴리스프',
      template:"newlisp",
      icon:'mdi-beehive-outline',
      command:"newlisp {ARGS} {FILENAME}.{EXT}",
      cli: "newlisp {ARGS}",
      errorRegEx: ".+?\\((\\d), \\d\\) (.+)",
      keyBindings: null
    },
    'NewtonScript':{
      highlighting:"newtonscript",
      ext: 'lsp',
      kor: '뉴턴스크립트 - NEWT/0',
      template:"newtonscript",
      icon:'mdi-food-apple',
      command:"/opt/newt0/bin/newt {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\((\\d), \\d\\) (.+)",
      keyBindings: null
    },
    'Next':{
      highlighting:"next",
      ext: 'n',
      kor: '넥스트',
      template:"next",
      icon:'mdi-page-next-outline',
      command:"next {ARGS} {FILENAME}.{EXT}",
      cli: "next",
      errorRegEx: ".+?\\.n:(\\d+)> (.+)",
      keyBindings: null
    },
    'Nial':{
      highlighting:"nial",
      ext: 'ndf',
      kor: '나이얼',
      template:"nial",
      icon:'mdi-ship-wheel',
      command:"nial64 {ARGS} -defs {FILENAME}.{EXT}",
      cli: "echo 'type \"bye\" to quit' && nial64 -i {ARGS}",
      errorRegEx: ".+?\\((\\d), \\d\\) (.+)",
      keyBindings: null
    },
    'Nice':{
      highlighting:"nice",
      ext: 'nice',
      kor: '나이스',
      template:"nice",
      icon:'mdi-coffee-maker',
      args: '-a {FILENAME}.jar',
      command:"alias java=/usr/lib/jvm/java-8-openjdk-amd64/bin/java\nmkdir -p {FILENAME}_nice && mv -f {FILENAME}.{EXT} {FILENAME}_nice && /opt/nice/bin/nicec {ARGS} {FILENAME}_nice && java -jar {FILENAME}.jar",
      cli: null,
      errorRegEx: ".+?\\.nice: line (\\d+),.+?\\d+:\r\n(.*)",
      keyBindings: null
    },
    'Nickle':{
      highlighting:"nickle",
      ext: 'n5',
      kor: '니클',
      template:"nickle",
      icon:'mdi-alpha-n-circle-outline',
      command:"nickle {ARGS} {FILENAME}.{EXT}",
      cli: "echo 'type \"bye\" to quit' && nial64 -i {ARGS}",
      errorRegEx: ".+?\\.n5:(\\d+): .+",
      keyBindings: null
    },
    'Nim':{
      highlighting:"nim",
      ext: 'nim',
      kor: '님',
      template:"nim",
      icon:'mdi-crown-outline',
      args: '--verbosity:0',
      command:"nim c -r {ARGS} {FILENAME}.{EXT}",
      cli: "lua",
      errorRegEx: ".+?\\((\\d), \\d\\) (.+)",
      keyBindings: null
    },
    'Nit':{
      highlighting:"nit",
      ext: 'nit',
      kor: '닛',
      template:"nit",
      icon:'mdi-bug',
      command:"nit {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.nit:(\\d+),\\d+.+?: Error:(.+)",
      keyBindings: null
    },
    'Noumenon':{
      highlighting:"noumenon",
      ext: 'nm',
      kor: '누메논',
      template:"noumenon",
      icon:'mdi-chair-school',
      command:"noumenon {ARGS} {FILENAME}.{EXT}",
      cli: "noumenon",
      errorRegEx: null,
      keyBindings: null
    },
    'Novus':{
      highlighting:"novus",
      ext: 'ns',
      kor: '노부스',
      template:"novus",
      icon:'mdi-alpha-n-box-outline',
      args:'--no-color',
      command:"/opt/novus/bin/novc {ARGS} {FILENAME}.{EXT} && /opt/novus/bin/novrt {FILENAME}.nx",
      cli: null,
      errorRegEx: ".+?\\.ns:(\\d+):(.+)",
      keyBindings: null
    },
    'Nuua':{
      highlighting:"nuua",
      ext: 'nu',
      kor: '누아',
      template:"nuua",
      icon:'mdi-triforce',
      command:"nuua {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Nyx':{
      highlighting:"nyx",
      ext: 'nyx',
      kor: '닉스',
      template:"nyx",
      icon:'mdi-bottle-wine-outline',
      command:"nyx {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?Error: .+? at line (\\d+), (.+)",
      keyBindings: null
    },
    'Oak':{
      highlighting:"oak",
      ext: 'ok',
      kor: '오크',
      template:"oak",
      icon:'mdi-saw-blade',
      args: ' -c c',
      command:"oak {ARGS} {FILENAME}.{EXT} && ./main",
      cli: null,
      errorRegEx: "(\\d+) \\| (.+)",
      keyBindings: null
    },
    'Oberon':{
      highlighting:"oberon",
      ext: 'm',
      kor: '오베론 - Oxford Oberon-2',
      template:"oberon",
      icon:'mdi-chess-king',
      command:"/opt/oberon/bin/obc {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.m\\\", line (\\d+): (.+)",
      keyBindings: null
    },
    'Objeck':{
      highlighting:"objeck",
      ext: 'obs',
      kor: '오브젝크',
      template:"objeck",
      icon:'mdi-snowflake-variant',
      command:"OBJECK_LIB_PATH=/opt/objeck-lang/lib obc {ARGS} -src {FILENAME}.{EXT} && obr ./{FILENAME}.obe",
      cli: null,
      errorRegEx: ".+?:(\\d+): (.+)",
      keyBindings: null
    },
    'Objective-C':{
      highlighting:"objective-c",
      ext: 'm',
      kor: '오브젝티브-C',
      template:"objc",
      icon:'mdi-language-c',
      command:"gcc {ARGS} -fdiagnostics-color=never `gnustep-config --objc-flags` -o {FILENAME} {FILENAME}.{EXT} `gnustep-config --base-libs` && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.m:(\\d+):\\d+: error: (.*)",
      keyBindings: null
    },
    'OCaml':{
      highlighting:"ocaml",
      ext: 'ml',
      kor: 'OCaml',
      template:"ocaml",
      icon:'mdi-chart-line',
      command:"ocamlc {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: "ocaml",
      errorRegEx: "(\\d+) \\| (.+?\r\n.+\r\n.+: .*)",
      keyBindings: null
    },
    'Octave':{
      highlighting:"octave",
      ext: 'm',
      kor: '옥타브(매트랩)',
      template:"octave",
      icon:'mdi-chart-bell-curve',
      command:"octave {ARGS} -q {FILENAME}.{EXT}",
      cli: "octave {ARGS}",
      errorRegEx: ".+? near line (\\d+) (.+)",
      keyBindings: null
    },
    'Odin':{
      highlighting:"odin",
      ext: 'odin',
      kor: '오딘',
      template:"odin",
      icon:'mdi-ray-start-arrow',
      command:"odin build {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.odin\\((\\d+):\\d+\\) (.+)",
      keyBindings: null
    },
    'Oforth':{
      highlighting:"oforth",
      ext: 'of',
      kor: '오포스',
      template:"oforth",
      icon:'mdi-alpha-o-circle-outline',
      command:"OFORTH_PATH=/opt/oforth oforth {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'ooc':{
      highlighting:"ooc",
      ext: 'ooc',
      kor: 'ooc - rock',
      template:"ooc",
      icon:'mdi-atom-variant',
      args: "-r",
      command:"rock {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.ooc:(\\d+):\\d+ (.+)",
      keyBindings: null
    },
    'Opal':{
      highlighting:"opal",
      ext: 'opal',
      kor: '오팔',
      template:"opal",
      icon:'mdi-diamond-outline',
      args: '-P /opt/opal --nocolor',
      command:"opal {ARGS} {FILENAME}.{EXT}",
      cli: "opal --repl {ARGS}",
      errorRegEx: ".+?\\.opal:(\\d+):\\d+:\r\n.+\r\n.+\r\n(.+)",
      keyBindings: null
    },
    'OpenSCAD':{
      highlighting:"scad",
      ext: 'scad',
      kor: '오픈S캐드',
      template:"openscad",
      icon:'mdi-cube-scan',
      args: "--autocenter --viewall",
      command:"xvfb-run openscad {ARGS} -o {FILENAME}.png {FILENAME}.{EXT} && imshow {FILENAME}.png",
      errorRegEx: "ERROR: .+?\\.scad\\\", line (\\d+): (.+)",
      keyBindings: null
    },
    'OpenSpin':{
      highlighting:"spin",
      ext: 'spin',
      kor: '오픈스핀 - Spin/PASM',
      template:"spin",
      icon:'mdi-format-rotate-90',
      args: '-L /opt/openspin/lib',
      command:"openspin {ARGS} {FILENAME}.{EXT}",
      errorRegEx: ".+?\\.spin\\((\\d+):\\d+\\) : (.+)",
      keyBindings: null
    },
    'Oracle(mariadb)':{
      highlighting:"mysql",
      ext: 'sql',
      kor: '오라클 - mariadb',
      template:"oracle",
      icon:'mdi-alpha-o-box',
      args: '-D ryugod',
      command:"ps -ef | grep mysqld | grep -v grep > /dev/null || sudo service mysql start\nmysql -e \"SET GLOBAL sql_mode = 'ORACLE'\"\nmysql {ARGS} -H < {FILENAME}.{EXT} > {FILENAME}.html && imshow {FILENAME}.html",
      cli: "ps -ef | grep mysqld | grep -v grep > /dev/null || sudo service mysql start\nmysql -e \"SET GLOBAL sql_mode = 'ORACLE'\"\nmysql {ARGS}",
      errorRegEx: ".+? at line (\\d+): (.+)",
      keyBindings: null
    },
    'Orc':{
      highlighting:"orc",
      ext: 'orc',
      kor: '오크',
      template:"orc",
      icon:'mdi-tree',
      command:"orc {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.orc:(\\d+)(.*)",
      keyBindings: null
    },
    'Otus Lisp':{
      highlighting:"lisp",
      ext: 'lisp',
      kor: '오투스 리스프 - OL',
      template:"ol",
      icon:'mdi-code-parentheses',
      command:"ol {ARGS} {FILENAME}.{EXT}",
      cli: "ol {ARGS}",
      keyBindings: null
    },
    'ObjectScript':{
      highlighting:"java",
      ext: 'os',
      kor: '오브젝트스크립트 - oscript',
      template:"oscript",
      icon:'mdi-cube-send',
      command:"/opt/oscript/bin/oscript {ARGS} {FILENAME}.os",
      cli: null,
      errorRegEx: "(?:.*?: .+\r\n  at .+?\\.os:|Error parsing .+?\\.os, .+? at line )(\\d+)(.*)",
      keyBindings: null
    },
    'Oz':{
      highlighting:"oz",
      ext: 'oz',
      kor: '오즈 - mozart',
      template:"oz",
      icon:'mdi-wizard-hat',
      args: '-c',
      command:"ozc {ARGS} -o {FILENAME}.ozf {FILENAME}.{EXT} && ozengine ./{FILENAME}.ozf",
      cli: null,
      errorRegEx: "(?:%\\*.+\r\n)+?%\\*\\* .+? \\\".+?\\\", line (\\d+), column \\d+(.*)",
      keyBindings: null
    },
/*
    'P':{
      highlighting:"p",
      ext: 'p',
      kor: 'P',
      template:"p",
      icon:'mdi-alpha-p-circle',
      command:"P {ARGS} {FILENAME}.{EXT} && POutput/netcoreapp5.0/{FILENAME}",
      cli: null,
      errorRegEx: "\\[.+?\\.p\\] .+?: line (\\d+):\\d+ (.+)",
      keyBindings: null
    },
*/
    'P++':{
      highlighting:"ppp",
      ext: 'p++',
      kor: 'P++',
      template:"ppp",
      icon:'mdi-alpha-p',
      command:"P_SOURCE_PATH=/opt/ppp/lib /opt/ppp/p++ {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.p\\+\\+\\], line ~(\\d+)>\r\n(.+)",
      keyBindings: null
    },
    'Pagan':{
      highlighting:"pagan",
      ext: 'pgn',
      kor: '페이건',
      template:"pagan",
      icon:'mdi-account-star-outline',
      command:"pagan {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Par':{
      highlighting:"par",
      ext: 'par',
      kor: '파',
      template:"par",
      icon:'mdi-golf',
      command:"par {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+:\r\n\r\n(\\d+): (.+)",
      keyBindings: null
    },
    'PARI/GP':{
      highlighting:"gp",
      ext: 'gp',
      kor: 'PARI/GP',
      template:"gp",
      icon:'mdi-math-integral',
      args: '-q',
      command:"gp {ARGS} < {FILENAME}.{EXT}",
      cli: "gp {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'ParaSail':{
      highlighting:"parasail",
      ext: 'psl',
      kor: '파라세일',
      template:"parasail",
      icon:'mdi-triforce',
      args: "-command {FILENAME}",
      command:"/opt/parasail/bin/interp.csh {FILENAME}.{EXT} {ARGS}",
      cli: "/opt/parasail/bin/interp.csh {FILENAME}.{EXT}",
      errorRegEx: ".+?\\.psl:(\\d+):(.+)",
      keyBindings: null
    },
    'Parser3':{
      highlighting:"parser3",
      ext: 'p',
      kor: '파서3',
      template:"parser3",
      icon:'mdi-zodiac-leo',
      args: null,
      command:"/opt/parser3/parser3.cgi {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Pascal':{
      highlighting:"pascal",
      ext: 'pas',
      kor: '파스칼 - fpc',
      template:"pascal",
      icon:'mdi-zodiac-leo',
      args: '-v0',
      command:"fpc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".*?\\.pas\\((\\d+)(?:,\\d+)?\\) (.*)",
      keyBindings: null
    },
    'Pawn':{
      highlighting:"pawn",
      ext: 'p',
      kor: '폰',
      template:"pawn",
      icon:'mdi-chess-pawn',
      command:"pawncc {FILENAME}.{EXT} && pawnrun ./{FILENAME};tput init",
      cli: null,
      errorRegEx: ".+?\\((\\d+)\\) : (.+)",
      keyBindings: null
    },
    'Pepper':{
      highlighting:"pepper",
      ext: 'pr',
      kor: '페퍼',
      template:"pepper",
      icon:'mdi-chili-mild',
      command:"pepper {ARGS} {FILENAME}.{EXT}",
      cli: "pepper {ARGS}",
      errorRegEx: "(\\d+):\\d+: .+",
      keyBindings: null
    },
    'Perl':{
      highlighting:"perl",
      ext: 'pl',
      kor: '펄',
      template:"perl",
      icon:'mdi-image-filter-hdr',
      command:"perl {ARGS} {FILENAME}.{EXT}",
      cli: "perl {ARGS} -de1",
      errorRegEx: ".* line (\\d+)([,\\.].*)",
      keyBindings: null
    },
    'Pharo':{
      highlighting:"pharo",
      ext: 'st',
      kor: '페이로',
      template:"pharo",
      icon:'mdi-lighthouse-on',
      args: '--headless /opt/pharo/Pharo.image',
      command:"/opt/pharo/pharo {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? line (\\d+):(.*)",
      keyBindings: null
    },
    'Phix':{
      highlighting:"phix",
      ext: 'exw',
      kor: '픽스',
      template:"phix",
      icon:'mdi-alpha-p-circle',
      command:'echo -e "\\n" | p {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?:(\\d+)\r\n(.+\r\n.+)",
      keyBindings: null
    },
    'PIC':{
      highlighting:"pic",
      ext: 'pic',
      kor: '픽 - gnupic',
      template:"pic",
      icon:'mdi-picture-in-picture-top-right-outline',
      args: '--output-format png > {FILENAME}.png && imshow {FILENAME}.png',
      command:"pic2plot {FILENAME}.{EXT} {ARGS}",
      cli: null,
      errorRegEx: ".+?\\.pic:(\\d+): (.+)",
      keyBindings: null
    },
    'Picat':{
      highlighting:"picat",
      ext: 'pi',
      kor: '파이캣',
      template:"picat",
      icon:'mdi-cat',
      command:"picat {ARGS} {FILENAME}.{EXT}",
      cli: "picat {ARGS}",
      errorRegEx: ".+? ERROR .+? \\((\\d+)\\-\\d+\\) (.+)",
      keyBindings: null
    },
    'PicoLisp':{
        highlighting:"lisp",
        ext: 'lisp',
        kor: '피코리스프',
        template:"picolisp",
        icon:'mdi-chevron-right-box-outline',
        command:"picolisp {ARGS} {FILENAME}.{EXT}",
        cli: "picolisp {ARGS}",
        errorRegEx: "\\[.+?:(\\d+)\\] (.+)",
        keyBindings: null
      },
    'Pike':{
      highlighting:"pike",
      ext: 'pike',
      kor: '파이크',
      template:"pike",
      icon:'mdi-saxophone',
      command:"pike {ARGS} {FILENAME}.{EXT}",
      cli: "pike {ARGS}",
      errorRegEx: ".+?:(\\d+):(.*)",
      keyBindings: null
    },
    'PILOT':{
        highlighting:"pilot",
        ext: 'p',
        kor: '파일럿 - psPILOT',
        template:"pilot",
        icon:'mdi-seat-recline-normal',
        command:"pwsh /opt/psPILOT/psPILOT.ps1 {ARGS} {FILENAME}.{EXT}",
        cli: null,
        errorRegEx: null,
        keyBindings: null
    },    
    'Pocketlang':{
      highlighting:"pocketlang",
      ext: 'pk',
      kor: '포켓랭',
      template:"pocketlang",
      icon:'mdi-inbox-outline',
      command:"/opt/pocketlang/bin/pocket {ARGS} {FILENAME}.{EXT}",
      cli: '/opt/pocketlang/bin/pocket',
      errorRegEx: ".+\r\n.+?\\.pk\":(\\d+)(.*)",
      keyBindings: null
    },
    'Pony':{
      highlighting:"pony",
      ext: 'pony',
      kor: '포니',
      template:"pony",
      icon:'mdi-horseshoe',
      args: "--bin-name {FILENAME}",
      command:"ponyc {ARGS} < {FILENAME}.{EXT} && ./{FILENAME} 2>&1 | grep -v set_mempolicy",
      cli: null,
      errorRegEx: ".+?:(\\d+):(.*)",
      keyBindings: null
    },
    'Poly/ML':{
      highlighting:"sml",
      ext: 'sml',
      kor: '폴리',
      template:"polyml",
      icon:'mdi-function-variant',
      args: '-o {FILENAME}',
      command:"polyc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.sml:(\\d+): error: (.+)",
      keyBindings: null
    },
    'Poplog':{
      highlighting:"poplog",
      ext: 'p',
      kor: '팝로그 - Pop-11',
      template:"poplog",
      icon:'mdi-party-popper',
      command:"popc {ARGS} {FILENAME}.{EXT}",
      cli: "popc {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'PostScript':{
      highlighting:"postscript",
      ext: 'ps',
      kor: '포스트스크립트',
      template:"postscript",
      icon:'mdi-ghost',
      args: '-dBATCH -dNOPAUSE -sDEVICE=png16m',
      command:"gs {ARGS} -sOutputFile={FILENAME}.png {FILENAME}.{EXT} && imshow {FILENAME}.png",
      cli: "gs",
      keyBindings: null
    },
    'PostgreSQL':{
      highlighting:"pgsql",
      ext: 'sql',
      kor: '포스트그레SQL',
      template:"pgsql",
      icon:'mdi-elephant',
      args: '-H',
      command:"ps -ef | grep postgresql | grep -v grep > /dev/null || (echo 'Starting postgresql...' && (sudo service postgresql start > /dev/null))\npsql {ARGS} -f {FILENAME}.{EXT} > {FILENAME}.html && imshow {FILENAME}.html",
      cli: "ps -ef | grep postgresql | grep -v grep > /dev/null || (echo 'Starting postgresql...' && (sudo service postgresql start > /dev/null))\npsql",
      keyBindings: null
    },
    'Potion':{
      highlighting:"potion",
      ext: 'potion',
      kor: '포션',
      template:"potion",
      icon:'mdi-bottle-tonic-plus-outline',
      command:"potion {ARGS} {FILENAME}.{EXT}",
      cli: "potion {ARGS}",
      errorRegEx: ".+?:(\\d+):(.*)",
      keyBindings: null
    },
    'PowerShell':{
      highlighting:"powershell",
      ext: 'ps',
      kor: '파워셸',
      template:"powershell",
      icon:'mdi-powershell',
      command:"pwsh {ARGS} {FILENAME}.{EXT}",
      cli: "pwsh {ARGS}",
      errorRegEx: ".*?(\\d+) \\|(.*\r\n)(.*? \\|(.*\r\n))+",
      keyBindings: null
    },
    'Praat':{
      highlighting:"praat",
      ext: 'praat',
      kor: '프라트',
      template:"praat",
      icon:'mdi-ear-hearing',
      args: '--run',
      command:"praat {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "Error: .+\r\nScript line (\\d+) (.+)",
      keyBindings: null
    },
    'Processing':{
      highlighting:"processing",
      ext: 'pde',
      kor: '프로세싱',
      template:"processing",
      icon:'mdi-format-paint',
      args: "--sketch=$PWD/{FILENAME} --run",
      command:"mkdir -p {FILENAME} && mv -f {FILENAME}.{EXT} {FILENAME} && xvfb-run processing-java {ARGS}",
      cli: null,
      defaultFilename: 'MainProc',
      errorRegEx: ".+:(\\d+):\\d+:\\d+:\\d+: (.+)",
      keyBindings: null
    },
    'Prolog GNU':{
      highlighting:"prolog",
      ext: 'pl',
      kor: '프롤로그 gplc',
      template:"prolog",
      icon:'mdi-alpha-p-circle-outline',
      command:"gplc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: "gprolog",
      //errorRegEx: ".+:\r\n    .+ line (\\d+)(.*)",
      errorRegEx: ".+?\\.pl:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Prolog SWI':{
      highlighting:"prolog",
      ext: 'pl',
      kor: '프롤로그 swipl',
      template:"swipl",
      icon:'mdi-alpha-p-circle-outline',
      command:"swipl {ARGS} {FILENAME}.{EXT}",
      cli: "swipl {ARGS}",
      //errorRegEx: ".+:\r\n    .+ line (\\d+)(.*)",
      errorRegEx: ".+?\\.pl:(\\d+):(.+)",
      keyBindings: null
    },
    'PROMELA - Spin':{
      highlighting:"promela",
      ext: 'pml',
      kor: '프로멜라 - 스핀',
      template:"promela",
      icon:'mdi-axis-z-rotate-clockwise',
      command:"spin {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".*?: .*\r\n.+?-->.+?:(\\d+):(\\d+):",
      keyBindings: null
    },
    'PROSE':{
      highlighting:"prose",
      ext: 'pal',
      kor: '프로즈',
      template:"prose",
      icon:'mdi-file-document-edit-outline',
      command:"/opt/prose/bin/prism {ARGS} {FILENAME}.{EXT} && /opt/prose/bin/prose {FILENAME}.pro",
      cli: null,
      errorRegEx: ".+?: .+?\\.pal line (\\d+): (.+)",
      keyBindings: null
    },
    'Pug':{
      highlighting:"pug",
      ext: 'pug',
      kor: '퍼그',
      template:"pug",
      icon:'mdi-dog',
      command:"pug {ARGS} {FILENAME}.{EXT} && imshow {FILENAME}.html",
      cli: null,
      errorRegEx: ".+?: .+?:(\\d+):(.+)",
      keyBindings: null
    },
    'Pure':{
      highlighting:"pure",
      ext: 'pure',
      kor: '퓨어',
      template:"pure",
      icon:'mdi-water',
      command:"pure {ARGS} {FILENAME}.{EXT}",
      cli: "pure {ARGS}",
      errorRegEx: ".+?. line (\\d+): (.+)",
      keyBindings: null
    },
    'Pupp':{
      highlighting:"pupp",
      ext: 'pup',
      kor: '퍼프',
      template:"pupp",
      icon:'mdi-home-outline',
      command:"pupp {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? at line: (\\d+)(.*)",
      keyBindings: null
    },
    'Puppet':{
      highlighting:"puppet",
      ext: 'puppet',
      kor: '퍼핏',
      template:"puppet",
      icon:'mdi-dolly',
      args: "apply",
      command:"puppet {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\(file: .+?\\.puppet, line: (\\d+), (.+)",
      keyBindings: null
    },
    'Pyret':{
      highlighting:"pyret",
      ext: 'arr',
      kor: '파이릿',
      template:"pyret",
      icon:'mdi-skull-crossbones',
      args: "-q -e none",
      command:"pyret {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?. line (\\d+): (.+)",
      keyBindings: null
    },
    'Q':{
      highlighting:"q",
      ext: 'q',
      kor: '큐 - qlang',
      template:"q",
      icon:'mdi-alpha-q-box',
      command:"q {ARGS} -s {FILENAME}.{EXT}",
      cli: "q {ARGS}",
      errorRegEx: "! File .+?\\.q, line (\\d+): (.+)",
      keyBindings: null
    },
    'Qore':{
      highlighting:"qore",
      ext: 'q',
      kor: '코어',
      template:"qore",
      icon:'mdi-alpha-q',
      command:"/opt/qore/bin/qore {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? at .+?\\.q:(\\d+)(.+)",
      keyBindings: null
    },
    'QuickBASIC':{
      highlighting:"vb",
      ext: 'bas',
      kor: '퀵베이식 - dos 16bit',
      template:"quickbasic",
      icon:'mdi-weather-windy',
      command: "unix2dos -q {FILENAME}.{EXT} && ln -sfT /opt/dos/qb45 qb45 && emu2 qb45/bc.exe {ARGS} {FILENAME}.{EXT} {FILENAME}.obj NUL -- 'PATH=C:\\qb45' && emu2 qb45/link.exe {ARGS} {FILENAME}.obj,{FILENAME}.exe,NUL,qb45\\\\brun45.lib,NUL && emu2 {FILENAME}.exe -- 'PATH=C:\\qb45'",
      cli: "ln -sfT /opt/dos/qb45 qb45 && emu2 qb45/qb.exe -- 'PATH=C:\\qb45'",
      errorRegEx: null,
      keyBindings: null
    },
    'R':{
      highlighting:"r",
      ext: 'R',
      template:"r",
      kor: 'R',
      icon:'mdi-language-r',
      command:"R {ARGS} --slave -q -f {FILENAME}.{EXT}",
      cli: 'R',
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R)
    },
    'Racket':{
      highlighting:"lisp",
      ext: 'rkt',
      kor: '래킷',
      template:"racket",
      icon:'mdi-lambda',
      command:"racket {ARGS} {FILENAME}.{EXT}",
      cli: "racket {ARGS}",
      errorRegEx: ".*:(\\d+):\\d+: (.*)",
      keyBindings: null
    },
    'Raku':{
      highlighting:"raku",
      ext: 'raku',
      kor: '라쿠',
      template:"raku",
      icon:'mdi-ev-plug-tesla',
      command:"rakudo {ARGS} {FILENAME}.{EXT}",
      cli: "rakudo {ARGS}",
      errorRegEx: ".*?at (?:line )?(?:.+?:)?(\\d+)(.*)",
      keyBindings: null
    },
    'Rapira':{
      highlighting:"rapira",
      ext: 'rap',
      kor: '라피라',
      template:"rapira",
      icon:'mdi-book-open-variant',
      command:"/opt/rapira/rapira {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\*\\*\\*Error .+\r\n.+?Line number: (\\d+)\r\n.+\r\n( +.+\r\n)*",
      keyBindings: null
    },
    'Rapture':{
      highlighting:"rapira",
      ext: 'rap',
      kor: '랩처',
      template:"rapture",
      icon:'mdi-book-open-variant',
      command:"/opt/rapture/bin/rapture {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/rapture/bin/rapture",
      errorRegEx: "Error @ line (\\d+):\\d+\r\n(.+)",
      keyBindings: null
    },
    'Ratfor':{
      highlighting:"fortran",
      ext: 'ratfor',
      kor: '랫포',
      template:"ratfor",
      icon:'mdi-mouse-variant',
      command:"ratfor {ARGS} {FILENAME}.{EXT} | tail +2 > {FILENAME}.f90 && gfortran -o {FILENAME} {FILENAME}.f90 && ./{FILENAME}",
      cli: "ratfor {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'Rebol':{
      highlighting:"rebol",
      ext: 'r',
      kor: '리볼',
      template:"rebol",
      icon:'mdi-alpha-r-box',
      args: "--quiet",
      command:"rebol {ARGS} -s {FILENAME}.{EXT}",
      cli: "rebol {ARGS}",
      errorRegEx: "\\*\\* .+?: .+\r\n\\*\\* .+?\\(line (\\d+)\\) (.+)",
      keyBindings: null
    },
    'Red':{
      highlighting:"red",
      ext: 'red',
      kor: '레드',
      template:"red",
      icon:'mdi-alpha-r',
      command:"xvfb-run red {ARGS} {FILENAME}.{EXT}",
      cli: "xvfb-run red {ARGS}",
      errorRegEx: ".+?: \\(line (\\d+)\\)(.*)",
      keyBindings: null
    },
    'Redis':{
      highlighting:"redis",
      ext: 'redis',
      kor: '레디스',
      template:"redis",
      icon:'mdi-cube-outline',
      command:"ps -ef | grep redis-server | grep -v grep > /dev/null || (echo 'Starting redis...' && (sudo -u redis redis-server /etc/redis/redis.conf > /dev/null))\ncat {FILENAME}.{EXT} | redis-cli {ARGS}",
      cli: "ps -ef | grep redis-server | grep -v grep > /dev/null || (echo 'Starting redis...' && (sudo -u redis redis-server /etc/redis/redis.conf > /dev/null))\nredis-cli {ARGS}",
      keyBindings: null
    },
    'REXX':{
      highlighting:"rexx",
      ext: 'rex',
      kor: '렉스',
      template:"rexx",
      icon:'mdi-cards-spade',
      command:"rexx {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? \\\".+?\\\", line (\\d+): (.+)",
      keyBindings: null
    },
    'RIGAL':{
      highlighting:"rigal",
      ext: 'rig',
      kor: '리갈',
      template:"rigal",
      icon:'mdi-bottle-wine',
      command:"rm -f {FILENAME}.rsc && /opt/rigal/bin/rc {ARGS} {FILENAME} && [ -f {FILENAME}.rsc ] && /opt/rigal/bin/ic {FILENAME}",
      cli: null,
      errorRegEx: " Error in file .+?\\.rig\r\n Line= +?(\\d+)\r\n (.+)",
      keyBindings: null
    },
    'Ring':{
      highlighting:"ring",
      ext: 'ring',
      kor: '링',
      template:"ring",
      icon:'mdi-ring',
      command:"ring {ARGS} {FILENAME}.{EXT}",
      cli: "ringrepl",
      errorRegEx: "(?:In )?Line \\(?(\\d+)\\)? (.+)",
      keyBindings: null
    },
    'Rix':{
      highlighting:"rix",
      ext: 'rix',
      kor: '릭스',
      template:"rix",
      icon:'mdi-car-shift-pattern',
      args: '-q -o {FILENAME}',
      command:"export RIX_HOME=/opt/rix\nrixc {ARGS} {FILENAME}.{EXT} && sh {FILENAME}.sh 2> /dev/null && ./{FILENAME}.out",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Rk':{
      highlighting:"rk",
      ext: 'rk',
      kor: 'Rk',
      template:"rk",
      icon:'mdi-skate',
      command:"rk {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Rockstar':{
      highlighting:"rockstar",
      ext: 'rock',
      kor: '락스타',
      template:"rockstar",
      icon:'mdi-microphone',
      command:"rockstar {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Roff':{
      highlighting:"roff",
      ext: 'roff',
      kor: '로프 - groff/troff/nroff',
      template:"roff",
      icon:'mdi-bottle-tonic',
      args: '{FILENAME}.{EXT} -Tpdf > {FILENAME}.pdf && imshow {FILENAME}.pdf',
      command:"groff {ARGS}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'RPL/2':{
      highlighting:"rpl",
      ext: 'rpl',
      kor: 'RPL/2',
      template:"rpl",
      icon:'mdi-code-tags',
      command:"rpl {ARGS} {FILENAME}.{EXT}",
      cli: "rpl -i",
      errorRegEx: null,
      keyBindings: null
    },
    'Rubi':{
      highlighting:"rubi",
      ext: 'rb',
      kor: '루비',
      template:"rubi",
      icon:'mdi-language-ruby',
      command:"rubi {ARGS} {FILENAME}.{EXT}",
      cli: "rubi",
      errorRegEx: null,
      keyBindings: null
    },
    'Ruby':{
      highlighting:"ruby",
      ext: 'rb',
      kor: '루비',
      template:"ruby",
      icon:'mdi-language-ruby',
      command:"ruby {ARGS} {FILENAME}.{EXT}",
      cli: "irb",
      errorRegEx: ".*:(\\d+):(.*)",
      keyBindings: null
    },
    'Rutger':{
      highlighting:"rutger",
      ext: 'rtg',
      kor: '럿거',
      template:"rutger",
      icon:'mdi-zodiac-taurus',
      command:"/opt/rutger/rutger {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Rust':{
      highlighting:"rust",
      ext: 'rs',
      kor: '러스트',
      template:"rust",
      icon:'mdi-language-rust',
      command:"rustc {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?: .+?\r\n.+?:(\\d+):(.*)",
      keyBindings: null
    },
    'S-Lang':{
      highlighting:"slang",
      ext: 'slang',
      kor: 'S-랭',
      template:"slang",
      icon:'mdi-alpha-s',
      command:"slsh {ARGS} {FILENAME}.{EXT}",
      cli: "slsh {ARGS}",
      errorRegEx: ".+?\\.slang:(\\d+):(.*)",
      keyBindings: null
    },
    'Sass':{
      highlighting:"css",
      ext: 'sass',
      kor: 'Sass',
      template:"sass",
      icon:'mdi-sass',
      command:"sass {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.sass (\\d+):\\d+(.*)",
      keyBindings: null
    },
    'SCSS':{
      highlighting:"css",
      ext: 'scss',
      kor: 'SCSS',
      template:"scss",
      icon:'mdi-sass',
      command:"sass {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.scss (\\d+):\\d+(.*)",
      keyBindings: null
    },
    'Saffire':{
      highlighting:"saffire",
      ext: 'sf',
      kor: '사파이어',
      template:"saffire",
      icon:'mdi-diamond',
      command:"/opt/saffire/bin/saffire {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/saffire/bin/saffire repl",
      errorRegEx: ".+\\.sf on line (\\d+)(.*)",
      keyBindings: null
    },
    'Sather':{
      highlighting:"sather",
      ext: 'sa',
      kor: '새더',
      template:"sather",
      icon:'mdi-tower-fire',
      command:"SATHER_HOME=/opt/sather sacomp -o {FILENAME} {FILENAME}.{EXT} 2> build.log && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.sa:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Saurus':{
      highlighting:"saurus",
      ext: 'su',
      kor: '사우루스',
      template:"saurus",
      icon:'mdi-bone',
      command:"saurus {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.su ?: ?(\\d+)(.*)",
      keyBindings: null
    },
    'SBCL':{
      highlighting:"lisp",
      ext: 'lisp',
      kor: '스틸뱅크커먼리스프(Steel Bank Common Lisp)',
      template:"sbcl",
      icon:'mdi-wheel-barrow',
      command:"sbcl {ARGS} --script {FILENAME}.{EXT}",
      cli: "sbcl {ARGS}",
      keyBindings: null
    },
    'Scala2':{
      highlighting:"scala",
      ext: 'scala',
      kor: '스칼라2',
      template:"scala",
      icon:'mdi-database',
      command:"scala {ARGS} {FILENAME}.{EXT}",
      cli: "scala {ARGS}",
      errorRegEx: ".+?:(\\d+): (.*)",
      keyBindings: null
    },
    'Scala3':{
      highlighting:"scala",
      ext: 'scala',
      kor: '스칼라3',
      template:"scala3",
      icon:'mdi-database',
      command:"/opt/scala3/bin/scala {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/scala3/bin/scala {ARGS}",
      errorRegEx: ".+?: .+?:(\\d+):(\\d+) -+",
      keyBindings: null
    },
    'Scheme(Chez)':{
      highlighting:"scheme",
      ext: 'scm',
      kor: '스킴 - chezscheme',
      template:"chezscheme",
      icon:'mdi-lambda',
      args: '--silent',
      command:"chezscheme --script {FILENAME}.{EXT}",
      cli: "chezscheme",
      errorRegEx: ".+? at line (\\d+), (.+?\\.scm)",
      keyBindings: null
    },
    'Scheme(Gambit)':{
      highlighting:"scheme",
      ext: 'scm',
      kor: '스킴 - gambit',
      template:"gambit",
      icon:'mdi-lambda',
      command:"/opt/gambit/bin/gsi {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/gambit/bin/gsi",
      keyBindings: null
    },
    'Scheme(MIT)':{
      highlighting:"scheme",
      ext: 'scm',
      kor: '스킴 - mit-scheme',
      template:"scheme",
      icon:'mdi-lambda',
      args: '--silent',
      command:"mit-scheme {ARGS} < {FILENAME}.{EXT}",
      cli: "mit-scheme --interactive",
      keyBindings: null
    },
    'Scilab':{
      highlighting:"scilab",
      ext: 'sce',
      kor: '싸이랩',
      template:"scilab",
      icon:'mdi-grid',
      args: "-f {FILENAME}.{EXT}",
      command:"scilab-cli {ARGS} -quit",
      cli: "scilab-cli",
      errorRegEx: "at line .+? (\\d+) of .+\r\n(?:.*\r\n)+?(Error:.+)",
      keyBindings: null
    },
    'Scriptol':{
      highlighting:"scriptol",
      ext: 'sol',
      kor: '스크립톨',
      template:"scriptol",
      icon:'mdi-script-outline',
      args: '-q',
      command:"/opt/scriptol/solp {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.sol.L?(\\d+)(:\\d+)?: (.*)",
      keyBindings: null
    },
    'Seed7':{
      highlighting:"seed7",
      ext: 'sd7',
      kor: '씨드7',
      template:"seed7",
      icon:'mdi-label-outline',
      args: '-q',
      command:"s7 {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\*\\*\\* .+?\\.sd7\\((\\d+)\\):\\d+: (.+)",
      keyBindings: null
    },
    'Self':{
      highlighting:"self",
      ext: 'self',
      kor: '셀프',
      template:"self",
      icon:'mdi-weather-sunny',
      args: '-s /opt/self/core.snap',
      command:"Self {ARGS} < {FILENAME}.{EXT} 2> /dev/null",
      cli: "Self {ARGS}",
      errorRegEx: null,
      keyBindings: null
    },
    'Senegal':{
      highlighting:"senegal",
      ext: 'sgl',
      kor: '세네갈',
      template:"senegal",
      icon:'mdi-star-box-outline',
      args: null,
      command:"senegal {ARGS} {FILENAME}.{EXT}",
      cli: "senegal",
      errorRegEx: "< Error on line (\\d+) > (.+\r\n.+?in: .+\\.sgl)",
      keyBindings: null
    },
    'Seq':{
      highlighting:"seq",
      ext: 'seq',
      kor: 'Seq',
      template:"seq",
      icon:'mdi-view-sequential-outline',
      args: 'run',
      command:"seqc {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'SETL':{
      highlighting:"setl",
      ext: 'setl',
      kor: 'SETL',
      template:"setl",
      icon:'mdi-set-split',
      args: null,
      command:"/opt/setl/setl {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\*\\*\\*  Error.+? line (\\d+) .+?\\.setl(.*)",
      keyBindings: null
    },
    'Shen':{
      highlighting:"shen",
      ext: 'shen',
      kor: '셴',
      template:"shen",
      icon:'mdi-head-snowflake-outline',
      command:"/opt/shen/bin/shen script {FILENAME}.{EXT} {ARGS}",
      cli: '/opt/shen/bin/shen repl',
      errorRegEx: null,
      keyBindings: null
    },
    'Simula':{
      highlighting:"simula",
      ext: 'sim',
      kor: '시뮬라 - cim',
      template:"simula",
      icon:'mdi-sigma',
      args:'--cflags=-w -q',
      command:"cim {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: '.+?\\.sim\\", line (\\d+): (.+)',
      keyBindings: null
    },
    'Sink':{
      highlighting:"sink",
      ext: 'sink',
      kor: '싱크',
      template:"sink",
      icon:'mdi-shuriken',
      command:"sink {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\\.sink:(\\d+):\\d+:(.*)",
      keyBindings: null
    },
    'Sisal':{
      highlighting:"sisal",
      ext: 'sis',
      kor: '사이잘',
      template:"sisal",
      icon:'mdi-fruit-pineapple',
      command:"sisalc {ARGS} -o {FILENAME} {FILENAME}.{EXT} 2> /dev/null && echo \"NIL\" | ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.sis:(\\d+): (.+)",
      keyBindings: null
    },
    'SkyLark':{
      highlighting:"starlark",
      ext: 'sky',
      kor: '스카이라크',
      template:"skylark",
      icon:'mdi-airplane-takeoff',
      command:"skylark {ARGS} {FILENAME}.{EXT}",
      cli: 'skylark {ARGS}',
      errorRegEx: ".+?\\.sky:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Slash':{
      highlighting:"slash",
      ext: 'sl',
      kor: '슬래시',
      template:"slash",
      icon:'mdi-knife-military',
      command:"/opt/slash/bin/slash-cli {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/slash/bin/slash-cli",
      errorRegEx: ".+?: .+\r\n  at .+? in .+?\\.sl, line (\\d+)(.*)",
      keyBindings: null
    },
    'Sleep':{
      highlighting:"sleep",
      ext: 'sl',
      kor: '슬립',
      template:"sleep",
      icon:'mdi-power-sleep',
      command:"sleep.sh {ARGS} {FILENAME}.{EXT}",
      cli: "sleep.sh {ARGS}",
      errorRegEx: "(?:Warning|Error): .+? at (?:line|.+\\.sl)[\\ :](\\d+)(.*)",
      keyBindings: null
    },
    'Slogan':{
      highlighting:"slogan",
      ext: 'sn',
      kor: '슬로건',
      template:"slogan",
      icon:'mdi-subtitles-outline',
      args: '-e',
      command:"/opt/slogan/slogan {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/slogan/slogan",
      errorRegEx: null,
      keyBindings: null
    },
    'Smalltalk':{
      highlighting:"smalltalk",
      ext: 'st',
      kor: '스몰토크',
      template:"smalltalk",
      icon:'mdi-alpha-s-circle-outline',
      command:"gst {ARGS} {FILENAME}.{EXT}",
      cli: "gst {ARGS}",
      errorRegEx: ".+?:(\\d+): (.*)",
      keyBindings: null
    },
    'Smile':{
      highlighting:"smile",
      ext: 'sm',
      kor: '스마일',
      template:"smile",
      icon:'mdi-emoticon-outline',
      command:"/opt/smile/bin/smile {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/smile/bin/smile {ARGS}",
      errorRegEx: ".+?\\.sm:(\\d+): (.+)",
      keyBindings: null
    },
    'SML/NJ':{
      highlighting:"sml",
      ext: 'sml',
      kor: 'Standard ML',
      template:"sml",
      icon:'mdi-function-variant',
      command:"sml {ARGS} < {FILENAME}.{EXT}",
      cli: "sml {ARGS}",
      errorRegEx: ".+?:(\\d+)\\.\\d+(\\ Error|-\\d+\\.\\d+ \\w+): (.+)",
      keyBindings: null
    },
    'Snobol4':{
      highlighting:"snobol",
      ext: 'sno',
      kor: '스노볼4',
      template:"snobol4",
      icon:'mdi-file-document-multiple-outline',
      command:"/opt/snobol4/bin/snobol4 {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/snobol4/bin/snobol4",
      errorRegEx: ".+\\.sno:(\\d+): (.+)",
      keyBindings: null
    },
    'Snobol4(spitbol)':{
      highlighting:"snobol",
      ext: 'sno',
      kor: '스노볼4 - spitbol',
      template:"spitbol",
      icon:'mdi-file-document-multiple-outline',
      command:"spitbol {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\((\\d+(?:,\\d+)?)\\) : (.+)",
      keyBindings: null
    },
    'SoftScript':{
      highlighting:"softscript",
      ext: 'ss',
      kor: '소프트스크립트',
      template:"softscript",
      icon:'mdi-chart-ppf',
      command:"softscript  {ARGS} {FILENAME}.{EXT}",
      cli: "softscript",
      errorRegEx: "Line (\\d+) in .+?\\.ss\r\nError: (.+)",
      keyBindings: null
    },
    'Solidity':{
      highlighting:"sol",
      ext: 'sol',
      kor: '솔리디티',
      template:"solidity",
      icon:'mdi-ethereum',
      args: '--overwrite --bin --abi',
      command:"solc -o . {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".*?: .*\r\n.+?-->.+?:(\\d+):(\\d+):",
      keyBindings: null
    },
    'SOM':{
      highlighting:"som",
      ext: 'som',
      kor: '솜',
      template:"som",
      icon:'mdi-pipe-disconnected',
      args: '-cp /opt/som/core-lib:.',
      command: "SOM++ {ARGS} {FILENAME}",
      cli: "SOM++ {ARGS}",
      errorRegEx: "Error: .+? in line (\\d+)\\. .+:(.+)",
      keyBindings: null
    },
    'Sparkling':{
      highlighting:"sparkling",
      ext: 'spn',
      kor: '스파클링',
      template:"sparkling",
      icon:'mdi-star-four-points',
      command: "spn {ARGS} {FILENAME}.{EXT}",
      cli: "spn",
      errorRegEx: ".+? line (?:\x1B\\[\\d+m)?(\\d+).*? char .*?\\d+.*?:? (.+)",
      keyBindings: null
    },
    'SPL':{
      highlighting:"spl",
      ext: 'spl',
      kor: 'SPL',
      template:"spl",
      icon:'mdi-puzzle',
      command:"spl {ARGS} {FILENAME}.{EXT} > {FILENAME}.c && gcc -o {FILENAME} {FILENAME}.c -lm && ./{FILENAME}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Spow':{
      highlighting:"spow",
      ext: 'awl',
      kor: '스포',
      template:"spow",
      icon:'mdi-sunglasses',
      command:"spow {ARGS} {FILENAME}.{EXT}",
      cli: 'spow',
      errorRegEx: null,
      keyBindings: null
    },
    'Squirrel':{
      highlighting:"squirrel",
      ext: 'nut',
      kor: '스퀴럴',
      template:"squirrel",
      icon:'mdi-nut',
      command:"sq {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? line = \\((\\d+)\\) column = \\(\\d+\\) : (.+)",
      keyBindings: null
    },
    'SQLite':{
      highlighting:"sql",
      ext: 'sql',
      kor: 'SQLite',
      template:"sql",
      icon:'mdi-alpha-s-box-outline',
      command:"echo '<table border=1>' > {FILENAME}.html && sqlite3 {ARGS} -header -html {FILENAME}.db < {FILENAME}.{EXT} >> {FILENAME}.html && echo '</table>'  >> {FILENAME}.html && imshow {FILENAME}.html",
      cli: "sqlite3 {ARGS}",
      keyBindings: monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S)
    },
    'SQL Server':{
      highlighting:"sql",
      ext: 'sql',
      kor: 'SQL 서버 - sqlcmd',
      template:"sqlserver",
      icon:'mdi-microsoft-access',
      args: '-S localhost -U SA -P 5ae01a8580f4ed83d7f7e110d268c75b -l 30 -s "|"',
      command:"ps -ef | grep sqlservr | grep -v grep > /dev/null || (echo 'Starting SQL Server...' && (sudo /opt/mssql/bin/sqlservr > /dev/null &))\nsqlcmd -b {ARGS} -i {FILENAME}.{EXT} -o {FILENAME}.out && (sed -e 's/\\(.*\\)/|\\1|/' {FILENAME}.out | grep -v '||' | grep -v 'rows affected' > {FILENAME}.md && imshow {FILENAME}.md) || cat main.out",
      cli: "ps -ef | grep sqlservr | grep -v grep > /dev/null || (echo 'Starting SQL Server...' && (sudo /opt/mssql/bin/sqlservr > /dev/null &))\nsqlcmd {ARGS}",
      errorRegEx: ".+, Line (\\d+)\r\n(.+)",
      keyBindings: null
    },
    'Stanza':{
      highlighting:"stanza",
      ext: 'stanza',
      kor: '스탠자',
      template:"stanza",
      icon:'mdi-format-columns',
      command:"ln -sfT /opt/stanza/.stanza ~/.stanza\n/opt/stanza/stanza {ARGS} {FILENAME}.{EXT} -o {FILENAME} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+\\.stanza:(\\d+)\\.\\d+: (.+)",
      keyBindings: null
    },
    'StarLark':{
      highlighting:"starlark",
      ext: 'star',
      kor: '스타라크',
      template:"starlark",
      icon:'mdi-star-face',
      command:"starlark {ARGS} {FILENAME}.{EXT}",
      cli: 'starlark {ARGS}',
      errorRegEx: ".+?\\.star:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Storm':{
      highlighting:"storm",
      ext: 'storm',
      kor: '스톰',
      template:"storm",
      icon:'mdi-weather-tornado',
      command:"/opt/storm/bin/stormcompiler {FILENAME}.{EXT} {FILENAME} && /opt/storm/bin/stormrun {FILENAME}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'StormScript':{
      highlighting:"stormscript",
      ext: 'sts',
      kor: '스톰스크립트',
      template:"stormscript",
      icon:'mdi-weather-tornado',
      command:"stormscript {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Strand':{
      highlighting:"prolog",
      ext: 'st',
      kor: '스트랜드',
      template:"strand",
      icon:'mdi-shore',
      args: 'run',
      command:"/opt/strand/strand {ARGS} {FILENAME}.{EXT}",
      cli: '/opt/strand/strand',
      errorRegEx: null,
      keyBindings: null
    },
    'Streem':{
      highlighting:"streem",
      ext: 'strm',
      kor: '스트림',
      template:"streem",
      icon:'mdi-view-stream-outline',
      command:"streem {ARGS} {FILENAME}.{EXT}",
      cli: 'streem',
      errorRegEx: null,
      keyBindings: null
    },
    'Strela':{
      highlighting:"strela",
      ext: 'strela',
      kor: '스트렐라',
      template:"strela",
      icon:'mdi-watch',
      args: '--search /opt/strela',
      command:"strela {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?\\.strela:(\\d+):\\d+ (.+)",
      keyBindings: null
    },
    'SurgeScript':{
      highlighting:"surgescript",
      ext: 'ss',
      kor: '서지스크립트',
      template:"surgescript",
      icon:'mdi-shoe-print',
      command:"surgescript {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? on .+?\\.ss:(\\d+)(.*)",
      keyBindings: null
    },
    'Swift':{
      highlighting:"swift",
      ext: 'swift',
      kor: '스위프트',
      template:"swift",
      icon:'mdi-language-swift',
      args: '-no-color-diagnostics',
      command:"swift {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".*:(\\d+):\\d+: (.*)",
      keyBindings: null
    },
    'SZL':{
      highlighting:"szl",
      ext: 'szl',
      kor: 'SZL',
      template:"szl",
      icon:'mdi-spotlight-beam',
      command:"szl {ARGS} {FILENAME}.{EXT}",
      cli: "szlsh",
      errorRegEx: null,
      keyBindings: null
    },
    'Tamgu':{
      highlighting:"tamgu",
      ext: 'tmg',
      kor: '탐구',
      template:"tamgu",
      icon:'mdi-feature-search-outline',
      command:"/opt/tamgu/bin/tamgu {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/tamgu/bin/tamgu",
      errorRegEx: "Error line:(\\d+) (.*?)\\.tmg",
      keyBindings: null
    },
    'Tamsin':{
      highlighting:"tamsin",
      ext: 'tamsin',
      kor: '탐신',
      template:"tamsin",
      icon:'mdi-exit-run',
      command:"tamsin {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Tea':{
      highlighting:"tea",
      ext: 'tea',
      kor: '티',
      template:"tea",
      icon:'mdi-tea',
      command:"ln -sfT /opt/tea tea && tea/bin/tea --init {FILENAME} && mv -f {FILENAME}.{EXT} {FILENAME}\ntea/bin/tea {FILENAME} && php-cgi -q {FILENAME}/dist/{FILENAME}.php > {FILENAME}.html && imshow {FILENAME}.html",
      cli: null,
      errorRegEx: ".+?:\r\n.+?\\.tea:(\\d+)(.*)",
      keyBindings: null
    },
    'TeX':{
      highlighting:"tex",
      ext: 'tex',
      kor: '텍',
      template:"tex",
      icon:'mdi-newspaper-variant-outline',
      command:"tex {ARGS} {FILENAME}.{EXT} && dvipdfm {FILENAME}.dvi && imshow {FILENAME}.pdf",
      cli: null,
      errorRegEx: ".*\r+\n.*\r+\n.*\r+\n.* line (\\d+)(.*)?",
      keyBindings: null
    },
    'Tcl':{
      highlighting:"tcl",
      ext: 'tcl',
      kor: '티클',
      template:"tcl",
      icon:'mdi-feather',
      command:"tclsh {ARGS} {FILENAME}.{EXT}",
      cli: "tclsh {ARGS}",
      errorRegEx: ".*\r+\n.*\r+\n.*\r+\n.* line (\\d+)(.*)?",
      keyBindings: null
    },
    'Tcsh':{
      highlighting:"shell",
      ext: 'tcsh',
      kor: 'TC셸',
      template:"tcsh",
      icon:'mdi-emoticon-devil-outline',
      command:"chmod 755 {FILENAME}.{EXT} && tcsh {ARGS} ./{FILENAME}.{EXT}",
      cli: 'tcsh {ARGS}',
      keyBindings: null
    },
    'TerminalBasic':{
      highlighting:"vb",
      ext: 'bas',
      kor: '터미널베이식',
      template:"terminalbasic",
      icon:'mdi-chip',
      args: "-b",
      command:"/opt/terminalbasic/terminalbasic {ARGS} < {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "/opt/terminalbasic/terminalbasic",
      keyBindings: null
    },
    'Terra':{
      highlighting:"terra",
      ext: 't',
      kor: '테라',
      template:"terra",
      icon:'mdi-creation',
      command:"terra {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\\.t:(\\d+): (.+)",
      keyBindings: null
    },
    'Terraform':{
      highlighting:"hcl",
      ext: 'tf',
      kor: '테라폼',
      template:"terraform",
      icon:'mdi-terraform',
      args: "-auto-approve",
      command:"terraform init && terraform apply {ARGS}",
      cli: null,
      errorRegEx: ".*\r+\n.*\r+\n.*\r+\n.* line (\\d+)(.*)?",
      keyBindings: null
    },
    'TIScript':{
      highlighting:"javascript1",
      ext: 'tis',
      kor: 'TI스크립트',
      template:"tiscript",
      icon:'mdi-home',
      command:"wine /opt/tiscript/bin/tis.exe {ARGS} {FILENAME}.{EXT}",
      cli: 'wine /opt/tiscript/bin/tiscript.exe {ARGS}',
      errorRegEx: "Error: .*?\r\r\n\tat .+\\(.+?:(\\d+)\\)(.*)",
      keyBindings: null
    },
    'TotemScript':{
      highlighting:"javascript1",
      ext: 'totem',
      kor: '토템스크립트',
      template:"totemscript",
      icon:'mdi-ev-plug-ccs1',
      args: '-f',
      command:"/opt/totemscript/TotemScriptCmd {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "Script error: .+? on line (\\d+):\\d+(.+)",
      keyBindings: null
    },
    'Turbo Assembler':{
      highlighting:"tasm",
      ext: 'asm',
      kor: '터보어셈블러 - turbo assembler - dos 16bit',
      template:"tasm",
      icon:'mdi-car-turbocharger',
      command:"emu2 /opt/dos/tasm/tasm.exe {ARGS} {FILENAME}.{EXT} && emu2 /opt/dos/tasm/tlink.exe {FILENAME}.obj && emu2 {FILENAME}.exe",
      cli: null,
      errorRegEx: "\\*\\*(?:Error|Fatal)\\*\\* .+?\\.asm\\((\\d+)\\) (.+)",
      keyBindings: null
    },
    'Turbo C':{
      highlighting:"cpp",
      ext: 'c',
      kor: '터보 C - dos 16bit',
      template:"tc",
      icon:'mdi-language-c',
      command:"unix2dos -q {FILENAME}.{EXT} && ln -sfT /opt/tc tc && emu2 tc/TCC.EXE {ARGS} {FILENAME}.{EXT} -- 'PATH=C:\\TC' && emu2 {FILENAME}.exe",
      cli: null,
      errorRegEx: ".*? (\\d+): (.*)",
      keyBindings: null
    },
    'Turbo C++':{
      highlighting:"cpp",
      ext: 'cpp',
      kor: '터보 C++ - dos 16bit',
      template:"tcpp",
      icon:'mdi-alpha-t-box-outline',
      command:"ln -sfT /opt/tcpp101 tc && emu2 tc/bin/tcc.exe {ARGS} {FILENAME}.{EXT} -- 'PATH=C:\\TC\\BIN' && emu2 {FILENAME}.exe",
               //ln -sf /opt/tcpp101 TC && emu2 TC/bin/tcc.exe  main.cpp -- 'PATH=C:\TC\BIN' && emu2 main.exe
      cli: null,
      errorRegEx: ".*? (\\d+): (.*)",
      keyBindings: null
    },
    'Turbo Pascal':{
      highlighting:"pascal",
      ext: 'pas',
      kor: '터보 파스칼 - dos 16bit',
      template:"tp",
      icon:'mdi-content-save-outline',
      args: "'/TC:\\TP'",
      command:"ln -sfT /opt/tp TP && emu2 TP/tpc.exe {ARGS} {FILENAME}.{EXT} -- 'PATH=C:\\TP' && emu2 {FILENAME}.exe",
      cli: null,
      errorRegEx: ".*?\\((\\d+)\\): (.*)",
      keyBindings: null
    },
    'U++':{
      highlighting:"cpp",
      ext: 'cc',
      kor: '마이크로 C++ - μC++',
      template:"upp",
      icon:'mdi-microscope',
      command:"u++ {ARGS} -o {FILENAME} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.cc:(\\d+):\\d+:(.*)",
      keyBindings: null
    },
    'ubasic':{
      highlighting:"vb",
      ext: 'bas',
      kor: '마이크로베이식',
      template:"ubasic",
      icon:'mdi-square-small',
      command:"/opt/ubasic/ubx {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Umka':{
      highlighting:"umka",
      ext: 'um',
      kor: '움카',
      template:"umka",
      icon:'mdi-mouse',
      command:"/opt/umka/bin/umka {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "Error .+\\.um \\((\\d+), \\d+\\): (.+)",
      keyBindings: null
    },
    'Umple':{
      highlighting:"umple",
      ext: 'ump',
      kor: '움플레',
      template:"umple",
      icon:'mdi-window-maximize',
      args: '-q {FILENAME}.{EXT} && javac {FILENAME}.java && java -cp . {FILENAME}',
      command:"/opt/umple/umple {ARGS}",
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: null,
      keyBindings: null
    },
    'uclang':{
      highlighting:"uclang",
      ext: 'ucl',
      kor: 'uc랭',
      template:"uclang",
      icon:'mdi-sign-pole',
      command:"/opt/uclang/bin/uclang {ARGS} {FILENAME}.{EXT}",
      cli: null,
      defaultFilename: 'Main',
      errorRegEx: ".+? in file: \".+?\\.ucl\" on line: (\\d+)(.*)",
      keyBindings: null
    },
    'Unicon':{
      highlighting:"icon",
      ext: 'icn',
      kor: '유니콘',
      template:"unicon",
      icon:'mdi-sign-pole',
      command:"unicon {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.icn:(\\d+): (.+)",
      keyBindings: null
    },
    'Ursa':{
      highlighting:"ursa",
      ext: 'u',
      kor: '우르사',
      template:"ursa",
      icon:'mdi-pinwheel',
      command:"ursa {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'V':{
      highlighting:"v",
      ext: 'v',
      kor: 'V언어',
      template:"v",
      icon:'mdi-alpha-v-circle-outline',
      command:"v {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: 'v {ARGS}',
      errorRegEx: ".+?:(\\d+):\\d+:(.+)",
      keyBindings: null
    },
    'Vala':{
      highlighting:"vala",
      ext: 'vala',
      kor: '발라',
      template:"vala",
      icon:'mdi-alpha-v-circle',
      command:"valac {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?:(\\d+).\\d+-\\d+\\.\\d+:(.*)",
      keyBindings: null
    },
    'Verilog':{
      highlighting:"verilog",
      ext: 'v',
      kor: '베릴로그',
      template:"verilog",
      icon:'mdi-vector-point',
      args: '-o {FILENAME}',
      command:"iverilog {ARGS} {FILENAME}.{EXT} && vvp {FILENAME}",
      cli: null,
      errorRegEx: ".+?:(\\d+): (.+)",
      keyBindings: null
    },
    'VHDL':{
      highlighting:"vhdl",
      ext: 'vhdl',
      kor: 'VHDL',
      template:"vhdl",
      icon:'mdi-electric-switch',
      command:"ghdl -a {ARGS} {FILENAME}.{EXT} && ghdl -e {FILENAME} && ghdl -r {FILENAME}",
      cli: null,
      errorRegEx: ".+?:(\\d+):\\d+:(.+)",
      keyBindings: null
    },
    'Vim Script':{
      highlighting:"vim",
      ext: 'vim',
      kor: '빔스크립트',
      template:"vim",
      icon:'mdi-alpha-v-box',
      command:'vim -c ":so %" {ARGS} {FILENAME}.{EXT}',
      cli: "vim",
      keyBindings: null
    },
    'Virgil':{
      highlighting:"virgil",
      ext: 'v3',
      kor: '베르길리우스',
      template:"virgil",
      icon:'mdi-zodiac-gemini',
      args: 'run',
      command:'/opt/virgil/bin/virgil {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+?\\.v3.*?@.*?(\\d+):(\\d+)(.*)",      
      keyBindings: null
    },
    'WardScript':{
      highlighting:"wardscript",
      ext: 'ward',
      kor: '와드스크립트',
      template:"wardscript",
      icon:'mdi-crosshairs-gps',
      command:"/opt/wardscript/bin/ward {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Wax':{
      highlighting:"wax",
      ext: 'wax',
      kor: '왁스',
      template:"wax",
      icon:'mdi-octagram',
      args: '--silent --c {FILENAME}.c',
      command:"/opt/wax/bin/waxc {ARGS} {FILENAME}.{EXT} && make {FILENAME} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?line (\\d+): (.+)",
      keyBindings: null
    },
    'Whitespace':{
      highlighting:"whitespace",
      ext: 'ws',
      kor: '화이트스페이스',
      template:"whitespace",
      icon:'mdi-keyboard-space',
      command:"wspace {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: null,
      keyBindings: null,
      insertSpaces: false
    },
    'Wolfram Script':{
      highlighting:"mathics",
      ext: 'wls',
      kor: '울프람스크립트/매스매티카',
      template:"mathics",
      icon:'mdi-math-integral-box',
      command:"mathics {ARGS} {FILENAME}.{EXT}",
      cli: "mathics {ARGS}",
      errorRegEx: "\\w+::\\w+: .+ \\(line (\\d+) of .*\\)(.+)",
      keyBindings: null
    },
    'World':{
      highlighting:"world",
      ext: 'w',
      kor: '월드',
      template:"world",
      icon:'mdi-earth-box',
      command:"/opt/world/world {ARGS} {FILENAME}.{EXT}",
      cli: "/opt/world/world",
      errorRegEx: null,
      keyBindings: null
    },
    'Wren':{
      highlighting:"wren",
      ext: 'wren',
      kor: '렌',
      template:"wren",
      icon:'mdi-owl',
      command:"wren_cli {ARGS} {FILENAME}.{EXT}",
      cli: "wren_cli {ARGS}",
      errorRegEx: "\\[.+? line (\\d+)\\] (Error .+)",
      keyBindings: null
    },    
    'Wu':{
      highlighting:"wu",
      ext: 'wu',
      kor: '우',
      template:"wu",
      icon:'mdi-eye-circle',
      command:"wu {ARGS} {FILENAME}.{EXT} && lua {FILENAME}.lua",
      cli: null,
      errorRegEx: null,
      keyBindings: null
    },
    'Wyvern':{
      highlighting:"wyvern",
      ext: 'wyv',
      kor: '와이번',
      template:"wyvern",
      icon:'mdi-fire',
      command:"wyvern {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+? (?:at|on) line (\\d+) (column \\d+)",
      keyBindings: null
    },
    'X10':{
      highlighting:"x10",
      ext: 'x10',
      kor: 'x10',
      template:"x10",
      icon:'mdi-numeric-10-box-multiple-outline',
      command:"x10c {ARGS} {FILENAME}.{EXT} && x10 {FILENAME}",
      cli: null,
      errorRegEx: ".+? (?:at|on) line (\\d+) (column \\d+)",
      keyBindings: null
    },
    'xlang':{
      highlighting:"c",
      ext: 'x',
      kor: 'x랭',
      template:"xlang",
      icon:'mdi-alpha-x-circle',
      command:"xlang {ARGS} {FILENAME}.{EXT} && ./a.out",
      cli: null,
      errorRegEx: ".+?\\.x:(\\d+):\\d+ (.+)",
      keyBindings: null
    },
    'XLisp':{
      highlighting:"lisp",
      ext: 'lsp',
      kor: 'X리스프',
      template:"xlisp",
      icon:'mdi-alpha-x-box',
      command:"xlisp {ARGS} < {FILENAME}.{EXT}",
      cli: "xlisp {ARGS}",
      keyBindings: null
    },
    'Xion':{
      highlighting:"xion",
      ext: 'xn',
      kor: '시온 - Openxion',
      template:"xion",
      icon:'mdi-file-cabinet',
      command:"xion {ARGS} {FILENAME}.{EXT}",
      cli: "xion {ARGS}",
      errorRegEx: ".+? on line (\\d+) at character (\\d+)",
      keyBindings: null
    },
    'XPL0':{
      highlighting:"xpl0",
      ext: 'xpl',
      kor: 'XPL0',
      template:"xpl0",
      icon:'mdi-alpha-x',
      command:"echo 'N' | xpl0 {ARGS} {FILENAME} && emu2 {FILENAME}.com",
      cli: null,
      keyBindings: null
    },
    'XL':{
      highlighting:"xl",
      ext: 'xl',
      kor: 'XL',
      template:"xl",
      icon:'mdi-video-input-component',
      command:"/opt/xl/bin/xl {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+\\.xl:(\\d+):\\d+: (.+)",
      keyBindings: null
    },
    'Yacas':{
      highlighting:"yacas",
      ext: 'us',
      kor: '야카스',
      template:"yacas",
      icon:'mdi-chart-bell-curve-cumulative',
      command:"yacas {ARGS} {FILENAME}.{EXT}",
      cli: "yacas {ARGS}",
      errorRegEx: ".+?\\.us\\((\\d+)\\) : (Error .+)",
      keyBindings: null
    },
    'YASL':{
      highlighting:"yasl",
      ext: 'yasl',
      kor: 'YASL',
      template:"yasl",
      icon:'mdi-alpha-y-circle-outline',
      command:'yasl {ARGS} {FILENAME}.{EXT}',
      cli: 'yasl',
      errorRegEx: ".+?: .+? \\(?line (\\d+)\\)?(.*)",
      keyBindings: null
    },
    'YAsm':{
      highlighting:"assembly",
      ext: 'asm',
      kor: 'Y어셈블리',
      template:"yasm",
      icon:'mdi-alpha-y-box-outline',
      args: '-f elf64',
      command:'yasm {ARGS} {FILENAME}.{EXT} && ld -s -o {FILENAME} {FILENAME}.o && ./{FILENAME}',
      cli: null,
      errorRegEx: ".*?:(\\d+): \\w+: (.*)",
      keyBindings: null
    },
    'Yorick':{
      highlighting:"yorick",
      ext: 'i',
      kor: '요릭',
      template:"yorick",
      icon:'mdi-skull-outline',
      command:"yorick {ARGS} < {FILENAME}.{EXT}",
      cli: "yorick {ARGS}",
      keyBindings: null
    },
    'Yabasic':{
      highlighting:"vb",
      ext: 'bas',
      kor: '야베이식',
      template:'yabasic',
      icon:'mdi-console',
      command:'yabasic {ARGS} {FILENAME}.{EXT}',
      cli: null,
      errorRegEx: ".+ line (\\d+).+\r\n(.+)",
      keyBindings: null
    },
    'Zebra':{
      highlighting:"zebra",
      ext: 'zbr',
      kor: '지브라',
      template:"zebra",
      icon:'mdi-reorder-vertical',
      command:"Zebra {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: "\\[Line (\\d+)\\] (.+)",
      keyBindings: null
    },
    'Zig':{
      highlighting:"zig",
      ext: 'zig',
      kor: '지그',
      template:"zig",
      icon:'mdi-alpha-z-box-outline',
      //args: '-o {FILENAME}',
      command:"zig build-exe {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?:(\\d+):\\d+:(.+: .+)",
      keyBindings: null
    },
    'Zimbu':{
      highlighting:"zimbu",
      ext: 'zu',
      kor: '짐부',
      template:"zimbu",
      icon:'mdi-alpha-z-circle-outline',
      args: '{FILENAME}.{EXT} && gcc -o {FILENAME} {FILENAME}.c',
      command:"/opt/zimbu/zimbu {ARGS} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+\\.zu line (\\d+) (.+)",
      keyBindings: null
    },
    'Zion':{
      highlighting:"zion",
      ext: 'zion',
      kor: '시온',
      template:"zion",
      icon:'mdi-book-cross',      
      command:"export ZION_ROOT=/opt/zion\nzion {ARGS} {FILENAME}",
      cli: null,
      errorRegEx: ".+?\\.zion:(\\d+):\\d+(.*)",
      keyBindings: null
    },
    'zkl':{
      highlighting:"zkl",
      ext: 'zkl',
      kor: 'zkl',
      template:"zkl",
      icon:'mdi-flower-outline',
      //args: '-o {FILENAME}',
      command:"runzkl {ARGS} {FILENAME}.{EXT}",
      cli: 'runzkl {ARGS}',
      errorRegEx: ".+?:Line (\\d+):(.+)",
      keyBindings: null
    },
    '4tH':{
      highlighting:"4th",
      ext: '4th',
      kor: '4tH',
      template:"4th",
      icon:'mdi-numeric-4',
      args: 'cx',
      command: "4th {ARGS} {FILENAME}.{EXT}",
      cli: "4tsh",
      errorRegEx: null,
      keyBindings: null
    },
    '8th':{
      highlighting:"8th",
      ext: '8th',
      kor: '8th',
      template:"8th",
      icon:'mdi-numeric-8',
      command: "8th {ARGS} {FILENAME}.{EXT}",
      cli: "8th",
      errorRegEx: ".+: at line (\\d+) .+? in .+?\\.8th",
      keyBindings: null
    },
    '11l':{
      highlighting:"11l",
      ext: '11l',
      kor: '11l',
      template:"11l",
      icon:'mdi-numeric-1',
      command: "11l {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      errorRegEx: ".+?: .+?\r\n.+, line (\\d+)(.*)",
      keyBindings: null
    },
    '가람':{
      highlighting:"javascript1",
      ext: 'gr',
      kor: 'Garam',
      template:"garam",
      icon:'mdi-screwdriver',
      command:"garam {ARGS} < {FILENAME}.{EXT}",
      cli: null,
      keyBindings: null
    },
    '누리':{
      highlighting:"nuri",
      ext: 'nuri',
      kor: 'Nuri',
      template:"nuri",
      icon:'mdi-fruit-grapes',
      args: '--haneul /opt/nuri/haneul',
      command:"nuri {ARGS} {FILENAME}.{EXT}",
      cli: null,
      errorRegEx: ".+?, (\\d+).+",
      keyBindings: null
    },
    '아희':{
      highlighting:"shell",
      ext: 'aheui',
      kor: 'Aheui',
      template:"aheui",
      icon:'mdi-syllabary-hangul',
      command:"aheui {ARGS} {FILENAME}.{EXT}",
      cli: null,
      keyBindings: null
    },
    '약속':{
      highlighting:"yaksok",
      ext: 'yak',
      kor: 'Yaksok',
      template:"yaksok",
      icon:'mdi-hand-okay',
      command:"ysjs compile {ARGS} {FILENAME}.{EXT} && node out",
      cli: null,
      keyBindings: null
    },
    '엄랭':{
      highlighting:"umm",
      ext: 'umm',
      kor: 'ummc',
      template:"umm",
      icon:'mdi-cow',
      command:"ummc -o {FILENAME} {ARGS} {FILENAME}.{EXT} && ./{FILENAME}",
      cli: null,
      keyBindings: null
    },
    '혀엉...':{
      highlighting:"shell",
      ext: 'hlang',
      kor: 'hyeong',
      template:"혀엉...",
      icon:'mdi-heart-outline',
      command:"hyeong {ARGS} {FILENAME}.{EXT}",
      cli: null,
      keyBindings: null
    },
    /*
    'terminalIcons': {
        0:{
          tooltip:"패널 크기 축소",
          onClick:'resizeTermScreen(true)',
          icon:'mdi-chevron-down'
        },
        1:{
          tooltip: "패널 크기 확대",
          onClick: 'resizeTermScreen(false)',
          icon: 'mdi-chevron-up'
        }
    }
    */
};